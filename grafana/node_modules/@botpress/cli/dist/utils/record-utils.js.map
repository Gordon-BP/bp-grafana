{
  "version": 3,
  "sources": ["../../src/utils/record-utils.ts"],
  "sourcesContent": ["import _ from 'lodash'\n\nexport const setNullOnMissingValues = <A, B>(\n  record: Record<string, A> = {},\n  oldRecord: Record<string, B> = {}\n): Record<string, A | null> => {\n  const newRecord: Record<string, A | null> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    newRecord[key] = value\n  }\n\n  for (const value of Object.keys(oldRecord)) {\n    if (!record[value]) {\n      newRecord[value] = null\n    }\n  }\n\n  return newRecord\n}\n\nexport const zipObjects = <A, B>(\n  recordA: Record<string, A>,\n  recordB: Record<string, B>\n): Record<string, [A | null, B | null]> => {\n  const allKeys = new Set([...Object.keys(recordA), ...Object.keys(recordB)])\n  const newRecord: Record<string, [A | null, B | null]> = {}\n\n  for (const key of allKeys) {\n    newRecord[key] = [recordA[key] ?? null, recordB[key] ?? null]\n  }\n\n  return newRecord\n}\n\nexport const mapValues = <A, B>(record: Record<string, A>, fn: (value: A, key: string) => B): Record<string, B> => {\n  const newRecord: Record<string, B> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    newRecord[key] = fn(value, key)\n  }\n\n  return newRecord\n}\n\nexport const mapValuesAsync = async <A, B>(\n  record: Record<string, A>,\n  fn: (value: A, key: string) => Promise<B>\n): Promise<Record<string, B>> => {\n  const newRecord: Record<string, B> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    newRecord[key] = await fn(value, key)\n  }\n\n  return newRecord\n}\n\nexport const mapKeys = <A>(record: Record<string, A>, fn: (value: A, key: string) => string): Record<string, A> => {\n  const newRecord: Record<string, A> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    const newKey = fn(value, key) as string\n    newRecord[newKey] = value\n  }\n\n  return newRecord\n}\n\nexport function filterValues<A, B extends A>(\n  record: Record<string, A>,\n  fn: (value: A, key: string) => value is B\n): Record<string, B>\nexport function filterValues<A, _B extends A>(\n  record: Record<string, A>,\n  fn: (value: A, key: string) => boolean\n): Record<string, A>\nexport function filterValues<A>(record: Record<string, A>, fn: (value: A, key: string) => boolean) {\n  const newRecord: Record<string, A> = {}\n\n  for (const [key, value] of Object.entries(record)) {\n    if (fn(value, key)) {\n      newRecord[key] = value\n    }\n  }\n\n  return newRecord\n}\n\nexport const mergeRecords = <K extends string, V>(\n  a: Record<K, V>,\n  b: Record<K, V>,\n  merge: (v1: V, v2: V) => V\n): Record<K, V> => {\n  const keys = _.uniq([...Object.keys(a), ...Object.keys(b)]) as K[]\n  const result: Record<K, V> = {} as Record<K, V>\n  for (const key of keys) {\n    const aValue = a[key]\n    const bValue = b[key]\n    if (aValue && bValue) {\n      result[key] = merge(aValue, bValue)\n    } else if (aValue) {\n      result[key] = aValue\n    } else if (bValue) {\n      result[key] = bValue\n    }\n  }\n  return result\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc;AAEP,MAAM,yBAAyB,CACpC,SAA4B,CAAC,GAC7B,YAA+B,CAAC,MACH;AAC7B,QAAM,YAAsC,CAAC;AAE7C,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,cAAU,OAAO;AAAA,EACnB;AAEA,aAAW,SAAS,OAAO,KAAK,SAAS,GAAG;AAC1C,QAAI,CAAC,OAAO,QAAQ;AAClB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,SAAO;AACT;AAEO,MAAM,aAAa,CACxB,SACA,YACyC;AACzC,QAAM,UAAU,oBAAI,IAAI,CAAC,GAAG,OAAO,KAAK,OAAO,GAAG,GAAG,OAAO,KAAK,OAAO,CAAC,CAAC;AAC1E,QAAM,YAAkD,CAAC;AAEzD,aAAW,OAAO,SAAS;AACzB,cAAU,OAAO,CAAC,QAAQ,QAAQ,MAAM,QAAQ,QAAQ,IAAI;AAAA,EAC9D;AAEA,SAAO;AACT;AAEO,MAAM,YAAY,CAAO,QAA2B,OAAwD;AACjH,QAAM,YAA+B,CAAC;AAEtC,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,cAAU,OAAO,GAAG,OAAO,GAAG;AAAA,EAChC;AAEA,SAAO;AACT;AAEO,MAAM,iBAAiB,OAC5B,QACA,OAC+B;AAC/B,QAAM,YAA+B,CAAC;AAEtC,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,cAAU,OAAO,MAAM,GAAG,OAAO,GAAG;AAAA,EACtC;AAEA,SAAO;AACT;AAEO,MAAM,UAAU,CAAI,QAA2B,OAA6D;AACjH,QAAM,YAA+B,CAAC;AAEtC,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,UAAM,SAAS,GAAG,OAAO,GAAG;AAC5B,cAAU,UAAU;AAAA,EACtB;AAEA,SAAO;AACT;AAUO,SAAS,aAAgB,QAA2B,IAAwC;AACjG,QAAM,YAA+B,CAAC;AAEtC,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,QAAI,GAAG,OAAO,GAAG,GAAG;AAClB,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,SAAO;AACT;AAEO,MAAM,eAAe,CAC1B,GACA,GACA,UACiB;AACjB,QAAM,OAAO,cAAAA,QAAE,KAAK,CAAC,GAAG,OAAO,KAAK,CAAC,GAAG,GAAG,OAAO,KAAK,CAAC,CAAC,CAAC;AAC1D,QAAM,SAAuB,CAAC;AAC9B,aAAW,OAAO,MAAM;AACtB,UAAM,SAAS,EAAE;AACjB,UAAM,SAAS,EAAE;AACjB,QAAI,UAAU,QAAQ;AACpB,aAAO,OAAO,MAAM,QAAQ,MAAM;AAAA,IACpC,WAAW,QAAQ;AACjB,aAAO,OAAO;AAAA,IAChB,WAAW,QAAQ;AACjB,aAAO,OAAO;AAAA,IAChB;AAAA,EACF;AACA,SAAO;AACT;",
  "names": ["_"]
}
