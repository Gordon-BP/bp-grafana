{
  "version": 3,
  "sources": ["../../src/api/find-previous-version.test.ts"],
  "sourcesContent": ["import * as uuid from 'uuid'\nimport * as client from '@botpress/client'\nimport { test, expect } from 'vitest'\nimport { findPreviousIntegrationVersion } from './find-previous-version'\nimport { IntegrationSummary } from './types'\n\nclass IntegrationFixtureCreator {\n  private t0 = Date.now()\n\n  public constructor(private name: string) {}\n\n  public create = (version: string): IntegrationSummary => {\n    return {\n      id: uuid.v4(),\n      name: this.name,\n      version,\n      public: true,\n      createdAt: new Date(this.t0++).toISOString(),\n      updatedAt: new Date(this.t0++).toISOString(),\n      description: 'description',\n      title: 'title',\n      iconUrl: 'iconUrl',\n      verificationStatus: 'approved',\n    }\n  }\n}\n\ntest('find previous integration version', async ({}) => {\n  const client: Partial<client.Client> = {\n    listIntegrations: async ({ name }: { name?: string; version?: string }) => {\n      const creator = new IntegrationFixtureCreator(name!)\n\n      const integrations: IntegrationSummary[] = [\n        creator.create('9.2.0'),\n        creator.create('9.2.1'),\n        creator.create('9.3.0'),\n        creator.create('9.2.2'),\n        creator.create('10.0.0'),\n      ].reverse() // reverse creation order just like the real API\n\n      return { integrations, meta: {} }\n    },\n  }\n\n  const getPrevious = async (version: string) => {\n    const integration = await findPreviousIntegrationVersion(client as client.Client, {\n      type: 'name',\n      name: 'slack',\n      version,\n    })\n    return integration?.version\n  }\n\n  expect(await getPrevious('10.0.1')).toEqual('10.0.0')\n  expect(await getPrevious('10.0.0')).toEqual('9.3.0')\n  expect(await getPrevious('9.3.0')).toEqual('9.2.2')\n  expect(await getPrevious('9.2.2')).toEqual('9.2.1')\n  expect(await getPrevious('9.2.1')).toEqual('9.2.0')\n  expect(await getPrevious('9.2.0')).toEqual(undefined)\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,WAAsB;AAEtB,oBAA6B;AAC7B,mCAA+C;AAG/C,MAAM,0BAA0B;AAAA,EAGvB,YAAoB,MAAc;AAAd;AAAA,EAAe;AAAA,EAFlC,KAAK,KAAK,IAAI;AAAA,EAIf,SAAS,CAAC,YAAwC;AACvD,WAAO;AAAA,MACL,IAAI,KAAK,GAAG;AAAA,MACZ,MAAM,KAAK;AAAA,MACX;AAAA,MACA,QAAQ;AAAA,MACR,WAAW,IAAI,KAAK,KAAK,IAAI,EAAE,YAAY;AAAA,MAC3C,WAAW,IAAI,KAAK,KAAK,IAAI,EAAE,YAAY;AAAA,MAC3C,aAAa;AAAA,MACb,OAAO;AAAA,MACP,SAAS;AAAA,MACT,oBAAoB;AAAA,IACtB;AAAA,EACF;AACF;AAAA,IAEA,oBAAK,qCAAqC,OAAO,CAAC,MAAM;AACtD,QAAMA,UAAiC;AAAA,IACrC,kBAAkB,OAAO,EAAE,KAAK,MAA2C;AACzE,YAAM,UAAU,IAAI,0BAA0B,IAAK;AAEnD,YAAM,eAAqC;AAAA,QACzC,QAAQ,OAAO,OAAO;AAAA,QACtB,QAAQ,OAAO,OAAO;AAAA,QACtB,QAAQ,OAAO,OAAO;AAAA,QACtB,QAAQ,OAAO,OAAO;AAAA,QACtB,QAAQ,OAAO,QAAQ;AAAA,MACzB,EAAE,QAAQ;AAEV,aAAO,EAAE,cAAc,MAAM,CAAC,EAAE;AAAA,IAClC;AAAA,EACF;AAEA,QAAM,cAAc,OAAO,YAAoB;AAC7C,UAAM,cAAc,UAAM,6DAA+BA,SAAyB;AAAA,MAChF,MAAM;AAAA,MACN,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,WAAO,aAAa;AAAA,EACtB;AAEA,4BAAO,MAAM,YAAY,QAAQ,CAAC,EAAE,QAAQ,QAAQ;AACpD,4BAAO,MAAM,YAAY,QAAQ,CAAC,EAAE,QAAQ,OAAO;AACnD,4BAAO,MAAM,YAAY,OAAO,CAAC,EAAE,QAAQ,OAAO;AAClD,4BAAO,MAAM,YAAY,OAAO,CAAC,EAAE,QAAQ,OAAO;AAClD,4BAAO,MAAM,YAAY,OAAO,CAAC,EAAE,QAAQ,OAAO;AAClD,4BAAO,MAAM,YAAY,OAAO,CAAC,EAAE,QAAQ,MAAS;AACtD,CAAC;",
  "names": ["client"]
}
