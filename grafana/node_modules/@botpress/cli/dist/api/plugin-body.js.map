{
  "version": 3,
  "sources": ["../../src/api/plugin-body.ts"],
  "sourcesContent": ["import type { Client, Plugin } from '@botpress/client'\nimport type * as sdk from '@botpress/sdk'\nimport * as utils from '../utils'\n\nexport type CreatePluginBody = utils.types.Merge<\n  Parameters<Client['createPlugin']>[0],\n  {\n    code?: string\n  }\n>\nexport type UpdatePluginBody = Parameters<Client['updatePlugin']>[0]\n\nexport const prepareCreatePluginBody = async (plugin: sdk.PluginDefinition): Promise<CreatePluginBody> => ({\n  name: plugin.name,\n  version: plugin.version,\n  user: {\n    tags: plugin.user?.tags ?? {},\n  },\n  configuration: plugin.configuration\n    ? {\n        ...plugin.configuration,\n        schema: await utils.schema.mapZodToJsonSchema(plugin.configuration),\n      }\n    : undefined,\n  events: plugin.events\n    ? await utils.records.mapValuesAsync(plugin.events, async (event) => ({\n        ...event,\n        schema: await utils.schema.mapZodToJsonSchema(event),\n      }))\n    : undefined,\n  actions: plugin.actions\n    ? await utils.records.mapValuesAsync(plugin.actions, async (action) => ({\n        ...action,\n        input: {\n          ...action.input,\n          schema: await utils.schema.mapZodToJsonSchema(action.input),\n        },\n        output: {\n          ...action.output,\n          schema: await utils.schema.mapZodToJsonSchema(action.output),\n        },\n      }))\n    : undefined,\n  states: plugin.states\n    ? await utils.records.mapValuesAsync(plugin.states, async (state) => ({\n        ...state,\n        schema: await utils.schema.mapZodToJsonSchema(state),\n      }))\n    : undefined,\n})\n\nexport const prepareUpdatePluginBody = (localPlugin: UpdatePluginBody, remotePlugin: Plugin): UpdatePluginBody => {\n  const actions = utils.records.setNullOnMissingValues(localPlugin.actions, remotePlugin.actions)\n  const events = utils.records.setNullOnMissingValues(localPlugin.events, remotePlugin.events)\n  const states = utils.records.setNullOnMissingValues(localPlugin.states, remotePlugin.states)\n\n  return {\n    ...localPlugin,\n    actions,\n    events,\n    states,\n    user: localPlugin.user, // TODO: allow deleting user tags with null\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,YAAuB;AAUhB,MAAM,0BAA0B,OAAO,YAA6D;AAAA,EACzG,MAAM,OAAO;AAAA,EACb,SAAS,OAAO;AAAA,EAChB,MAAM;AAAA,IACJ,MAAM,OAAO,MAAM,QAAQ,CAAC;AAAA,EAC9B;AAAA,EACA,eAAe,OAAO,gBAClB;AAAA,IACE,GAAG,OAAO;AAAA,IACV,QAAQ,MAAM,MAAM,OAAO,mBAAmB,OAAO,aAAa;AAAA,EACpE,IACA;AAAA,EACJ,QAAQ,OAAO,SACX,MAAM,MAAM,QAAQ,eAAe,OAAO,QAAQ,OAAO,WAAW;AAAA,IAClE,GAAG;AAAA,IACH,QAAQ,MAAM,MAAM,OAAO,mBAAmB,KAAK;AAAA,EACrD,EAAE,IACF;AAAA,EACJ,SAAS,OAAO,UACZ,MAAM,MAAM,QAAQ,eAAe,OAAO,SAAS,OAAO,YAAY;AAAA,IACpE,GAAG;AAAA,IACH,OAAO;AAAA,MACL,GAAG,OAAO;AAAA,MACV,QAAQ,MAAM,MAAM,OAAO,mBAAmB,OAAO,KAAK;AAAA,IAC5D;AAAA,IACA,QAAQ;AAAA,MACN,GAAG,OAAO;AAAA,MACV,QAAQ,MAAM,MAAM,OAAO,mBAAmB,OAAO,MAAM;AAAA,IAC7D;AAAA,EACF,EAAE,IACF;AAAA,EACJ,QAAQ,OAAO,SACX,MAAM,MAAM,QAAQ,eAAe,OAAO,QAAQ,OAAO,WAAW;AAAA,IAClE,GAAG;AAAA,IACH,QAAQ,MAAM,MAAM,OAAO,mBAAmB,KAAK;AAAA,EACrD,EAAE,IACF;AACN;AAEO,MAAM,0BAA0B,CAAC,aAA+B,iBAA2C;AAChH,QAAM,UAAU,MAAM,QAAQ,uBAAuB,YAAY,SAAS,aAAa,OAAO;AAC9F,QAAM,SAAS,MAAM,QAAQ,uBAAuB,YAAY,QAAQ,aAAa,MAAM;AAC3F,QAAM,SAAS,MAAM,QAAQ,uBAAuB,YAAY,QAAQ,aAAa,MAAM;AAE3F,SAAO;AAAA,IACL,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM,YAAY;AAAA;AAAA,EACpB;AACF;",
  "names": []
}
