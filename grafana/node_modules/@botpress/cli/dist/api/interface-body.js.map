{
  "version": 3,
  "sources": ["../../src/api/interface-body.ts"],
  "sourcesContent": ["import type { Client, Interface } from '@botpress/client'\nimport type * as sdk from '@botpress/sdk'\nimport * as utils from '../utils'\n\nexport type CreateInterfaceBody = Parameters<Client['createInterface']>[0]\nexport type UpdateInterfaceBody = Parameters<Client['updateInterface']>[0]\n\nexport const prepareCreateInterfaceBody = async (intrface: sdk.InterfaceDeclaration): Promise<CreateInterfaceBody> => ({\n  name: intrface.name,\n  version: intrface.version,\n  entities: intrface.entities\n    ? await utils.records.mapValuesAsync(intrface.entities, async (entity) => ({\n        ...entity,\n        schema: await utils.schema.mapZodToJsonSchema(entity),\n      }))\n    : {},\n  events: intrface.events\n    ? await utils.records.mapValuesAsync(intrface.events, async (event) => ({\n        ...event,\n        schema: await utils.schema.mapZodToJsonSchema(event),\n      }))\n    : {},\n  actions: intrface.actions\n    ? await utils.records.mapValuesAsync(intrface.actions, async (action) => ({\n        ...action,\n        input: {\n          ...action.input,\n          schema: await utils.schema.mapZodToJsonSchema(action.input),\n        },\n        output: {\n          ...action.output,\n          schema: await utils.schema.mapZodToJsonSchema(action.output),\n        },\n      }))\n    : {},\n  channels: intrface.channels\n    ? await utils.records.mapValuesAsync(intrface.channels, async (channel) => ({\n        ...channel,\n        messages: await utils.records.mapValuesAsync(channel.messages, async (message) => ({\n          ...message,\n          schema: await utils.schema.mapZodToJsonSchema(message),\n        })),\n      }))\n    : {},\n  nameTemplate: intrface.templateName\n    ? {\n        script: intrface.templateName,\n        language: 'handlebars',\n      }\n    : undefined,\n})\n\nexport const prepareUpdateInterfaceBody = (\n  localInterface: CreateInterfaceBody & { id: string },\n  remoteInterface: Interface\n): UpdateInterfaceBody => {\n  const actions = utils.records.setNullOnMissingValues(localInterface.actions, remoteInterface.actions)\n  const events = utils.records.setNullOnMissingValues(localInterface.events, remoteInterface.events)\n  const entities = utils.records.setNullOnMissingValues(localInterface.entities, remoteInterface.entities)\n\n  const currentChannels: UpdateInterfaceBody['channels'] = localInterface.channels\n    ? utils.records.mapValues(localInterface.channels, (channel, channelName) => ({\n        ...channel,\n        messages: utils.records.setNullOnMissingValues(\n          channel?.messages,\n          remoteInterface.channels[channelName]?.messages\n        ),\n      }))\n    : undefined\n\n  const channels = utils.records.setNullOnMissingValues(currentChannels, remoteInterface.channels)\n\n  return {\n    ...localInterface,\n    entities,\n    actions,\n    events,\n    channels,\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,YAAuB;AAKhB,MAAM,6BAA6B,OAAO,cAAsE;AAAA,EACrH,MAAM,SAAS;AAAA,EACf,SAAS,SAAS;AAAA,EAClB,UAAU,SAAS,WACf,MAAM,MAAM,QAAQ,eAAe,SAAS,UAAU,OAAO,YAAY;AAAA,IACvE,GAAG;AAAA,IACH,QAAQ,MAAM,MAAM,OAAO,mBAAmB,MAAM;AAAA,EACtD,EAAE,IACF,CAAC;AAAA,EACL,QAAQ,SAAS,SACb,MAAM,MAAM,QAAQ,eAAe,SAAS,QAAQ,OAAO,WAAW;AAAA,IACpE,GAAG;AAAA,IACH,QAAQ,MAAM,MAAM,OAAO,mBAAmB,KAAK;AAAA,EACrD,EAAE,IACF,CAAC;AAAA,EACL,SAAS,SAAS,UACd,MAAM,MAAM,QAAQ,eAAe,SAAS,SAAS,OAAO,YAAY;AAAA,IACtE,GAAG;AAAA,IACH,OAAO;AAAA,MACL,GAAG,OAAO;AAAA,MACV,QAAQ,MAAM,MAAM,OAAO,mBAAmB,OAAO,KAAK;AAAA,IAC5D;AAAA,IACA,QAAQ;AAAA,MACN,GAAG,OAAO;AAAA,MACV,QAAQ,MAAM,MAAM,OAAO,mBAAmB,OAAO,MAAM;AAAA,IAC7D;AAAA,EACF,EAAE,IACF,CAAC;AAAA,EACL,UAAU,SAAS,WACf,MAAM,MAAM,QAAQ,eAAe,SAAS,UAAU,OAAO,aAAa;AAAA,IACxE,GAAG;AAAA,IACH,UAAU,MAAM,MAAM,QAAQ,eAAe,QAAQ,UAAU,OAAO,aAAa;AAAA,MACjF,GAAG;AAAA,MACH,QAAQ,MAAM,MAAM,OAAO,mBAAmB,OAAO;AAAA,IACvD,EAAE;AAAA,EACJ,EAAE,IACF,CAAC;AAAA,EACL,cAAc,SAAS,eACnB;AAAA,IACE,QAAQ,SAAS;AAAA,IACjB,UAAU;AAAA,EACZ,IACA;AACN;AAEO,MAAM,6BAA6B,CACxC,gBACA,oBACwB;AACxB,QAAM,UAAU,MAAM,QAAQ,uBAAuB,eAAe,SAAS,gBAAgB,OAAO;AACpG,QAAM,SAAS,MAAM,QAAQ,uBAAuB,eAAe,QAAQ,gBAAgB,MAAM;AACjG,QAAM,WAAW,MAAM,QAAQ,uBAAuB,eAAe,UAAU,gBAAgB,QAAQ;AAEvG,QAAM,kBAAmD,eAAe,WACpE,MAAM,QAAQ,UAAU,eAAe,UAAU,CAAC,SAAS,iBAAiB;AAAA,IAC1E,GAAG;AAAA,IACH,UAAU,MAAM,QAAQ;AAAA,MACtB,SAAS;AAAA,MACT,gBAAgB,SAAS,cAAc;AAAA,IACzC;AAAA,EACF,EAAE,IACF;AAEJ,QAAM,WAAW,MAAM,QAAQ,uBAAuB,iBAAiB,gBAAgB,QAAQ;AAE/F,SAAO;AAAA,IACL,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;",
  "names": []
}
