{
  "version": 3,
  "sources": ["../../../../src/code-generation/plugin-package/plugin-package-definition/index.ts"],
  "sourcesContent": ["import * as consts from '../../consts'\nimport { stringifySingleLine } from '../../generators'\nimport { Module } from '../../module'\nimport { ActionsModule } from './actions-module'\nimport { DefaultConfigurationModule } from './configuration-module'\nimport { EventsModule } from './events-module'\nimport { StatesModule } from './states-module'\nimport * as types from './typings'\n\ntype PluginPackageModuleDependencies = {\n  defaultConfigModule: DefaultConfigurationModule\n  actionsModule: ActionsModule\n  eventsModule: EventsModule\n  statesModule: StatesModule\n}\n\nexport class PluginPackageDefinitionModule extends Module {\n  private _dependencies: PluginPackageModuleDependencies\n\n  public constructor(private _plugin: types.ApiPluginDefinition) {\n    super({\n      path: consts.INDEX_FILE,\n      exportName: consts.DEFAULT_EXPORT_NAME,\n    })\n\n    const defaultConfigModule = new DefaultConfigurationModule(_plugin.configuration)\n    defaultConfigModule.unshift('configuration')\n\n    const actionsModule = new ActionsModule(_plugin.actions ?? {})\n    actionsModule.unshift('actions')\n\n    const eventsModule = new EventsModule(_plugin.events ?? {})\n    eventsModule.unshift('events')\n\n    const statesModule = new StatesModule(_plugin.states ?? {})\n    statesModule.unshift('states')\n\n    this._dependencies = {\n      defaultConfigModule,\n      actionsModule,\n      eventsModule,\n      statesModule,\n    }\n\n    for (const dep of Object.values(this._dependencies)) {\n      this.pushDep(dep)\n    }\n  }\n\n  public async getContent() {\n    let content = ''\n\n    const { defaultConfigModule, actionsModule, eventsModule, statesModule } = this._dependencies\n\n    const defaultConfigImport = defaultConfigModule.import(this)\n    const actionsImport = actionsModule.import(this)\n    const eventsImport = eventsModule.import(this)\n    const statesImport = statesModule.import(this)\n\n    const user = {\n      tags: this._plugin.user?.tags ?? {},\n    }\n\n    content += [\n      consts.GENERATED_HEADER,\n      'import * as sdk from \"@botpress/sdk\"',\n      '',\n      `import * as ${defaultConfigModule.name} from \"./${defaultConfigImport}\"`,\n      `import * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `import * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `import * as ${statesModule.name} from \"./${statesImport}\"`,\n      `export * as ${defaultConfigModule.name} from \"./${defaultConfigImport}\"`,\n      `export * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `export * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `export * as ${statesModule.name} from \"./${statesImport}\"`,\n      '',\n      'export default {',\n      `  name: \"${this._plugin.name}\",`,\n      `  version: \"${this._plugin.version}\",`,\n      `  user: ${stringifySingleLine(user)},`,\n      `  configuration: ${defaultConfigModule.name}.${defaultConfigModule.exportName},`,\n      `  actions: ${actionsModule.name}.${actionsModule.exportName},`,\n      `  events: ${eventsModule.name}.${eventsModule.exportName},`,\n      `  states: ${statesModule.name}.${statesModule.exportName},`,\n      '} satisfies sdk.PluginPackage[\"definition\"]',\n    ].join('\\n')\n\n    return content\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwB;AACxB,wBAAoC;AACpC,oBAAuB;AACvB,4BAA8B;AAC9B,kCAA2C;AAC3C,2BAA6B;AAC7B,2BAA6B;AAUtB,MAAM,sCAAsC,qBAAO;AAAA,EAGjD,YAAoB,SAAoC;AAC7D,UAAM;AAAA,MACJ,MAAM,OAAO;AAAA,MACb,YAAY,OAAO;AAAA,IACrB,CAAC;AAJwB;AAMzB,UAAM,sBAAsB,IAAI,uDAA2B,QAAQ,aAAa;AAChF,wBAAoB,QAAQ,eAAe;AAE3C,UAAM,gBAAgB,IAAI,oCAAc,QAAQ,WAAW,CAAC,CAAC;AAC7D,kBAAc,QAAQ,SAAS;AAE/B,UAAM,eAAe,IAAI,kCAAa,QAAQ,UAAU,CAAC,CAAC;AAC1D,iBAAa,QAAQ,QAAQ;AAE7B,UAAM,eAAe,IAAI,kCAAa,QAAQ,UAAU,CAAC,CAAC;AAC1D,iBAAa,QAAQ,QAAQ;AAE7B,SAAK,gBAAgB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,eAAW,OAAO,OAAO,OAAO,KAAK,aAAa,GAAG;AACnD,WAAK,QAAQ,GAAG;AAAA,IAClB;AAAA,EACF;AAAA,EA9BQ;AAAA,EAgCR,MAAa,aAAa;AACxB,QAAI,UAAU;AAEd,UAAM,EAAE,qBAAqB,eAAe,cAAc,aAAa,IAAI,KAAK;AAEhF,UAAM,sBAAsB,oBAAoB,OAAO,IAAI;AAC3D,UAAM,gBAAgB,cAAc,OAAO,IAAI;AAC/C,UAAM,eAAe,aAAa,OAAO,IAAI;AAC7C,UAAM,eAAe,aAAa,OAAO,IAAI;AAE7C,UAAM,OAAO;AAAA,MACX,MAAM,KAAK,QAAQ,MAAM,QAAQ,CAAC;AAAA,IACpC;AAEA,eAAW;AAAA,MACT,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA,eAAe,oBAAoB,gBAAgB;AAAA,MACnD,eAAe,cAAc,gBAAgB;AAAA,MAC7C,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,oBAAoB,gBAAgB;AAAA,MACnD,eAAe,cAAc,gBAAgB;AAAA,MAC7C,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,aAAa,gBAAgB;AAAA,MAC5C;AAAA,MACA;AAAA,MACA,YAAY,KAAK,QAAQ;AAAA,MACzB,eAAe,KAAK,QAAQ;AAAA,MAC5B,eAAW,uCAAoB,IAAI;AAAA,MACnC,oBAAoB,oBAAoB,QAAQ,oBAAoB;AAAA,MACpE,cAAc,cAAc,QAAQ,cAAc;AAAA,MAClD,aAAa,aAAa,QAAQ,aAAa;AAAA,MAC/C,aAAa,aAAa,QAAQ,aAAa;AAAA,MAC/C;AAAA,IACF,EAAE,KAAK,IAAI;AAEX,WAAO;AAAA,EACT;AACF;",
  "names": []
}
