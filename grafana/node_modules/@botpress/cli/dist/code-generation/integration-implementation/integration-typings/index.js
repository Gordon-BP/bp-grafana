"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var integration_typings_exports = {};
__export(integration_typings_exports, {
  IntegrationTypingsModule: () => IntegrationTypingsModule
});
module.exports = __toCommonJS(integration_typings_exports);
var import_consts = require("../../consts");
var import_generators = require("../../generators");
var import_module = require("../../module");
var import_actions_module = require("./actions-module");
var import_channels_module = require("./channels-module");
var import_configuration_module = require("./configuration-module");
var import_configurations_module = require("./configurations-module");
var import_entities_module = require("./entities-module");
var import_events_module = require("./events-module");
var import_states_module = require("./states-module");
class IntegrationTypingsModule extends import_module.Module {
  constructor(_integration) {
    super({
      path: import_consts.INDEX_FILE,
      exportName: "TIntegration"
    });
    this._integration = _integration;
    const defaultConfigModule = new import_configuration_module.DefaultConfigurationModule(_integration.configuration);
    defaultConfigModule.unshift("configuration");
    const configurationsModule = new import_configurations_module.ConfigurationsModule(_integration.configurations ?? {});
    configurationsModule.unshift("configurations");
    const actionsModule = new import_actions_module.ActionsModule(_integration.actions ?? {});
    actionsModule.unshift("actions");
    const channelsModule = new import_channels_module.ChannelsModule(_integration.channels ?? {});
    channelsModule.unshift("channels");
    const eventsModule = new import_events_module.EventsModule(_integration.events ?? {});
    eventsModule.unshift("events");
    const statesModule = new import_states_module.StatesModule(_integration.states ?? {});
    statesModule.unshift("states");
    const entitiesModule = new import_entities_module.EntitiesModule(_integration.entities ?? {});
    entitiesModule.unshift("entities");
    this._dependencies = {
      defaultConfigModule,
      configurationsModule,
      actionsModule,
      channelsModule,
      eventsModule,
      statesModule,
      entitiesModule
    };
    for (const dep of Object.values(this._dependencies)) {
      this.pushDep(dep);
    }
  }
  _dependencies;
  async getContent() {
    let content = "";
    const {
      defaultConfigModule,
      configurationsModule,
      actionsModule,
      channelsModule,
      eventsModule,
      statesModule,
      entitiesModule
    } = this._dependencies;
    const defaultConfigImport = defaultConfigModule.import(this);
    const configurationsImport = configurationsModule.import(this);
    const actionsImport = actionsModule.import(this);
    const channelsImport = channelsModule.import(this);
    const eventsImport = eventsModule.import(this);
    const statesImport = statesModule.import(this);
    const entitiesImport = entitiesModule.import(this);
    const user = {
      tags: this._integration.user?.tags ?? {},
      creation: this._integration.user?.creation ?? { enabled: false, requiredTags: [] }
    };
    content += [
      import_consts.GENERATED_HEADER,
      `import * as ${defaultConfigModule.name} from "./${defaultConfigImport}"`,
      `import * as ${configurationsModule.name} from "./${configurationsImport}"`,
      `import * as ${actionsModule.name} from "./${actionsImport}"`,
      `import * as ${channelsModule.name} from "./${channelsImport}"`,
      `import * as ${eventsModule.name} from "./${eventsImport}"`,
      `import * as ${statesModule.name} from "./${statesImport}"`,
      `import * as ${entitiesModule.name} from "./${entitiesImport}"`,
      `export * as ${defaultConfigModule.name} from "./${defaultConfigImport}"`,
      `export * as ${configurationsModule.name} from "./${configurationsImport}"`,
      `export * as ${actionsModule.name} from "./${actionsImport}"`,
      `export * as ${channelsModule.name} from "./${channelsImport}"`,
      `export * as ${eventsModule.name} from "./${eventsImport}"`,
      `export * as ${statesModule.name} from "./${statesImport}"`,
      `export * as ${entitiesModule.name} from "./${entitiesImport}"`,
      "",
      "export type TIntegration = {",
      `  name: "${this._integration.name}"`,
      `  version: "${this._integration.version}"`,
      `  user: ${(0, import_generators.stringifySingleLine)(user)}`,
      `  configuration: ${defaultConfigModule.name}.${defaultConfigModule.exportName}`,
      `  configurations: ${configurationsModule.name}.${configurationsModule.exportName}`,
      `  actions: ${actionsModule.name}.${actionsModule.exportName}`,
      `  channels: ${channelsModule.name}.${channelsModule.exportName}`,
      `  events: ${eventsModule.name}.${eventsModule.exportName}`,
      `  states: ${statesModule.name}.${statesModule.exportName}`,
      `  entities: ${entitiesModule.name}.${entitiesModule.exportName}`,
      "}"
    ].join("\n");
    return content;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  IntegrationTypingsModule
});
//# sourceMappingURL=index.js.map
