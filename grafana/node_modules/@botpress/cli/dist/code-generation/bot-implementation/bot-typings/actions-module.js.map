{
  "version": 3,
  "sources": ["../../../../src/code-generation/bot-implementation/bot-typings/actions-module.ts"],
  "sourcesContent": ["import * as sdk from '@botpress/sdk'\nimport { zuiSchemaToTypeScriptType } from '../../generators'\nimport { Module, ReExportTypeModule } from '../../module'\nimport * as strings from '../../strings'\n\ntype ActionInput = sdk.BotActionDefinition['input']\ntype ActionOutput = sdk.BotActionDefinition['output']\n\nexport class ActionInputModule extends Module {\n  public constructor(private _input: ActionInput) {\n    const name = 'input'\n    const exportName = strings.typeName(name)\n    super({ path: `${name}.ts`, exportName })\n  }\n\n  public async getContent() {\n    return zuiSchemaToTypeScriptType(this._input.schema, this.exportName)\n  }\n}\n\nexport class ActionOutputModule extends Module {\n  public constructor(private _output: ActionOutput) {\n    const name = 'output'\n    const exportName = strings.typeName(name)\n    super({ path: `${name}.ts`, exportName })\n  }\n\n  public async getContent() {\n    return zuiSchemaToTypeScriptType(this._output.schema, this.exportName)\n  }\n}\n\nexport class ActionModule extends ReExportTypeModule {\n  public constructor(actionName: string, action: sdk.BotActionDefinition) {\n    super({ exportName: strings.typeName(actionName) })\n\n    const inputModule = new ActionInputModule(action.input)\n    const outputModule = new ActionOutputModule(action.output)\n\n    this.pushDep(inputModule)\n    this.pushDep(outputModule)\n  }\n}\n\nexport class ActionsModule extends ReExportTypeModule {\n  public constructor(actions: Record<string, sdk.BotActionDefinition>) {\n    super({ exportName: strings.typeName('actions') })\n    for (const [actionName, action] of Object.entries(actions)) {\n      const module = new ActionModule(actionName, action)\n      module.unshift(actionName)\n      this.pushDep(module)\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAA0C;AAC1C,oBAA2C;AAC3C,cAAyB;AAKlB,MAAM,0BAA0B,qBAAO;AAAA,EACrC,YAAoB,QAAqB;AAC9C,UAAM,OAAO;AACb,UAAM,aAAa,QAAQ,SAAS,IAAI;AACxC,UAAM,EAAE,MAAM,GAAG,WAAW,WAAW,CAAC;AAHf;AAAA,EAI3B;AAAA,EAEA,MAAa,aAAa;AACxB,eAAO,6CAA0B,KAAK,OAAO,QAAQ,KAAK,UAAU;AAAA,EACtE;AACF;AAEO,MAAM,2BAA2B,qBAAO;AAAA,EACtC,YAAoB,SAAuB;AAChD,UAAM,OAAO;AACb,UAAM,aAAa,QAAQ,SAAS,IAAI;AACxC,UAAM,EAAE,MAAM,GAAG,WAAW,WAAW,CAAC;AAHf;AAAA,EAI3B;AAAA,EAEA,MAAa,aAAa;AACxB,eAAO,6CAA0B,KAAK,QAAQ,QAAQ,KAAK,UAAU;AAAA,EACvE;AACF;AAEO,MAAM,qBAAqB,iCAAmB;AAAA,EAC5C,YAAY,YAAoB,QAAiC;AACtE,UAAM,EAAE,YAAY,QAAQ,SAAS,UAAU,EAAE,CAAC;AAElD,UAAM,cAAc,IAAI,kBAAkB,OAAO,KAAK;AACtD,UAAM,eAAe,IAAI,mBAAmB,OAAO,MAAM;AAEzD,SAAK,QAAQ,WAAW;AACxB,SAAK,QAAQ,YAAY;AAAA,EAC3B;AACF;AAEO,MAAM,sBAAsB,iCAAmB;AAAA,EAC7C,YAAY,SAAkD;AACnE,UAAM,EAAE,YAAY,QAAQ,SAAS,SAAS,EAAE,CAAC;AACjD,eAAW,CAAC,YAAY,MAAM,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC1D,YAAMA,UAAS,IAAI,aAAa,YAAY,MAAM;AAClD,MAAAA,QAAO,QAAQ,UAAU;AACzB,WAAK,QAAQA,OAAM;AAAA,IACrB;AAAA,EACF;AACF;",
  "names": ["module"]
}
