{
  "version": 3,
  "sources": ["../../../src/code-generation/bot-implementation/bot-implementation.ts"],
  "sourcesContent": ["import * as sdk from '@botpress/sdk'\nimport * as consts from '../consts'\nimport { Module } from '../module'\nimport { BotPluginsIndexModule } from './bot-plugins'\nimport { BotTypingsModule } from './bot-typings'\n\nexport class BotImplementationModule extends Module {\n  private _typingsModule: BotTypingsModule\n  private _pluginsModule: BotPluginsIndexModule\n\n  public constructor(bot: sdk.BotDefinition) {\n    super({\n      exportName: 'Bot',\n      path: consts.INDEX_FILE,\n    })\n\n    this._typingsModule = new BotTypingsModule(bot)\n    this._typingsModule.unshift('typings')\n    this.pushDep(this._typingsModule)\n\n    this._pluginsModule = new BotPluginsIndexModule(bot)\n    this._pluginsModule.unshift(consts.fromOutDir.pluginsDir)\n    this.pushDep(this._pluginsModule)\n  }\n\n  public async getContent() {\n    const {\n      //\n      _typingsModule: typingsModule,\n      _pluginsModule: pluginsModule,\n    } = this\n\n    const typingsImport = typingsModule.import(this)\n    const pluginsImport = pluginsModule.import(this)\n\n    return [\n      consts.GENERATED_HEADER,\n      'import * as sdk from \"@botpress/sdk\"',\n      `import * as ${typingsModule.name} from \"./${typingsImport}\"`,\n      `import * as ${pluginsModule.name} from \"./${pluginsImport}\"`,\n      '',\n      `export * from \"./${typingsImport}\"`,\n      `export * from \"./${pluginsImport}\"`,\n      '',\n      `type TPlugins = ${pluginsModule.name}.TPlugins`,\n      `type TBot = sdk.DefaultBot<${typingsModule.name}.${typingsModule.exportName}>`,\n      '',\n      'export type BotProps = {',\n      '  actions: sdk.BotProps<TBot, TPlugins>[\"actions\"]',\n      '}',\n      '',\n      'export class Bot extends sdk.Bot<TBot, TPlugins> {',\n      '  public constructor(props: BotProps) {',\n      '    super({',\n      '      actions: props.actions,',\n      `      plugins: ${pluginsModule.name}.${pluginsModule.exportName}`,\n      '    })',\n      '  }',\n      '}',\n      '',\n      '// extra types',\n      '',\n      'type AsyncFunction = (...args: any[]) => Promise<any>',\n      'export type EventHandlers = Required<{',\n      \"  [K in keyof Bot['eventHandlers']]: NonNullable<Bot['eventHandlers'][K]>[number]\",\n      '}>',\n      'export type MessageHandlers = Required<{',\n      \"  [K in keyof Bot['messageHandlers']]: NonNullable<Bot['messageHandlers'][K]>[number]\",\n      '}>',\n      '',\n      \"export type MessageHandlerProps = Parameters<MessageHandlers['*']>[0]\",\n      \"export type EventHandlerProps = Parameters<EventHandlers['*']>[0]\",\n      '',\n      \"export type Client = (MessageHandlerProps | EventHandlerProps)['client']\",\n      'export type ClientOperation = keyof {',\n      '  [K in keyof Client as Client[K] extends AsyncFunction ? K : never]: null',\n      '}',\n      'export type ClientInputs = {',\n      '  [K in ClientOperation]: Parameters<Client[K]>[0]',\n      '}',\n      'export type ClientOutputs = {',\n      '  [K in ClientOperation]: Awaited<ReturnType<Client[K]>>',\n      '}',\n    ].join('\\n')\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AACxB,oBAAuB;AACvB,yBAAsC;AACtC,yBAAiC;AAE1B,MAAM,gCAAgC,qBAAO;AAAA,EAC1C;AAAA,EACA;AAAA,EAED,YAAY,KAAwB;AACzC,UAAM;AAAA,MACJ,YAAY;AAAA,MACZ,MAAM,OAAO;AAAA,IACf,CAAC;AAED,SAAK,iBAAiB,IAAI,oCAAiB,GAAG;AAC9C,SAAK,eAAe,QAAQ,SAAS;AACrC,SAAK,QAAQ,KAAK,cAAc;AAEhC,SAAK,iBAAiB,IAAI,yCAAsB,GAAG;AACnD,SAAK,eAAe,QAAQ,OAAO,WAAW,UAAU;AACxD,SAAK,QAAQ,KAAK,cAAc;AAAA,EAClC;AAAA,EAEA,MAAa,aAAa;AACxB,UAAM;AAAA;AAAA,MAEJ,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,IAClB,IAAI;AAEJ,UAAM,gBAAgB,cAAc,OAAO,IAAI;AAC/C,UAAM,gBAAgB,cAAc,OAAO,IAAI;AAE/C,WAAO;AAAA,MACL,OAAO;AAAA,MACP;AAAA,MACA,eAAe,cAAc,gBAAgB;AAAA,MAC7C,eAAe,cAAc,gBAAgB;AAAA,MAC7C;AAAA,MACA,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB;AAAA,MACA,mBAAmB,cAAc;AAAA,MACjC,8BAA8B,cAAc,QAAQ,cAAc;AAAA,MAClE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,kBAAkB,cAAc,QAAQ,cAAc;AAAA,MACtD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,EAAE,KAAK,IAAI;AAAA,EACb;AACF;",
  "names": []
}
