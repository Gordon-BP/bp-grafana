{
  "version": 3,
  "sources": ["../../../../src/code-generation/bot-implementation/bot-plugins/plugin-module.ts"],
  "sourcesContent": ["import * as sdk from '@botpress/sdk'\nimport * as consts from '../../consts'\nimport { Module, ModuleProps } from '../../module'\nimport { PluginTypingsModule } from '../../plugin-implementation/plugin-typings'\n\ntype PluginInstance = NonNullable<sdk.BotDefinition['plugins']>[string]\n\nclass BundleJsModule extends Module {\n  private _indexJs: string\n  public constructor(plugin: PluginInstance) {\n    super({\n      path: 'bundle.js',\n      exportName: 'default',\n    })\n    this._indexJs = plugin.implementation.toString()\n  }\n\n  public async getContent() {\n    return this._indexJs\n  }\n}\n\nclass BundleDtsModule extends Module {\n  public constructor(private _typingsModule: PluginTypingsModule) {\n    super({\n      path: 'bundle.d.ts',\n      exportName: 'default',\n    })\n  }\n\n  public async getContent() {\n    const typingsImport = this._typingsModule.import(this)\n\n    return [\n      consts.GENERATED_HEADER,\n      'import * as sdk from \"@botpress/sdk\"',\n      `import * as ${this._typingsModule.name} from \"./${typingsImport}\"`,\n      `type TPlugin = sdk.DefaultPlugin<${this._typingsModule.name}.${this._typingsModule.exportName}>`,\n      'export default new sdk.Plugin<TPlugin>({})',\n      '',\n    ].join('\\n')\n  }\n}\n\nclass PluginConfigModule extends Module {\n  private _plugin: PluginInstance\n  public constructor(config: ModuleProps & { plugin: PluginInstance }) {\n    super(config)\n    this._plugin = config.plugin\n  }\n\n  public async getContent() {\n    const { interfaces, configuration } = this._plugin\n    const content = JSON.stringify({ interfaces, configuration }, null, 2)\n    return `export default ${content}`\n  }\n}\n\nexport class BotPluginModule extends Module {\n  private _typingsModule: PluginTypingsModule\n  private _bundleJsModule: BundleJsModule\n  private _bundleDtsModule: BundleDtsModule\n  private _configModule: PluginConfigModule\n\n  public readonly pluginName: string\n\n  public constructor(plugin: PluginInstance) {\n    super({\n      exportName: 'default',\n      path: consts.INDEX_FILE,\n    })\n\n    this.pluginName = plugin.name\n\n    this._typingsModule = new PluginTypingsModule(plugin.definition)\n    this._typingsModule.unshift('typings')\n    this.pushDep(this._typingsModule)\n\n    this._bundleJsModule = new BundleJsModule(plugin)\n    this.pushDep(this._bundleJsModule)\n\n    this._bundleDtsModule = new BundleDtsModule(this._typingsModule)\n    this.pushDep(this._bundleDtsModule)\n\n    this._configModule = new PluginConfigModule({\n      path: 'config.ts',\n      exportName: 'default',\n      plugin,\n    })\n    this.pushDep(this._configModule)\n  }\n\n  public async getContent() {\n    const configImport = this._configModule.import(this)\n    const typingsImport = this._typingsModule.import(this)\n    return [\n      consts.GENERATED_HEADER,\n      'import * as sdk from \"@botpress/sdk\"',\n      'import bundle from \"./bundle\"',\n      `import * as ${this._typingsModule.name} from \"./${typingsImport}\"`,\n      `import * as ${this._configModule.name} from \"./${configImport}\"`,\n      '',\n      `export type TPlugin = sdk.DefaultPlugin<${this._typingsModule.name}.${this._typingsModule.exportName}>`,\n      '',\n      `export default bundle.initialize(${this._configModule.name}.${this._configModule.exportName})`,\n      '',\n    ].join('\\n')\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AACxB,oBAAoC;AACpC,4BAAoC;AAIpC,MAAM,uBAAuB,qBAAO;AAAA,EAC1B;AAAA,EACD,YAAY,QAAwB;AACzC,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,YAAY;AAAA,IACd,CAAC;AACD,SAAK,WAAW,OAAO,eAAe,SAAS;AAAA,EACjD;AAAA,EAEA,MAAa,aAAa;AACxB,WAAO,KAAK;AAAA,EACd;AACF;AAEA,MAAM,wBAAwB,qBAAO;AAAA,EAC5B,YAAoB,gBAAqC;AAC9D,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,YAAY;AAAA,IACd,CAAC;AAJwB;AAAA,EAK3B;AAAA,EAEA,MAAa,aAAa;AACxB,UAAM,gBAAgB,KAAK,eAAe,OAAO,IAAI;AAErD,WAAO;AAAA,MACL,OAAO;AAAA,MACP;AAAA,MACA,eAAe,KAAK,eAAe,gBAAgB;AAAA,MACnD,oCAAoC,KAAK,eAAe,QAAQ,KAAK,eAAe;AAAA,MACpF;AAAA,MACA;AAAA,IACF,EAAE,KAAK,IAAI;AAAA,EACb;AACF;AAEA,MAAM,2BAA2B,qBAAO;AAAA,EAC9B;AAAA,EACD,YAAY,QAAkD;AACnE,UAAM,MAAM;AACZ,SAAK,UAAU,OAAO;AAAA,EACxB;AAAA,EAEA,MAAa,aAAa;AACxB,UAAM,EAAE,YAAY,cAAc,IAAI,KAAK;AAC3C,UAAM,UAAU,KAAK,UAAU,EAAE,YAAY,cAAc,GAAG,MAAM,CAAC;AACrE,WAAO,kBAAkB;AAAA,EAC3B;AACF;AAEO,MAAM,wBAAwB,qBAAO;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEQ;AAAA,EAET,YAAY,QAAwB;AACzC,UAAM;AAAA,MACJ,YAAY;AAAA,MACZ,MAAM,OAAO;AAAA,IACf,CAAC;AAED,SAAK,aAAa,OAAO;AAEzB,SAAK,iBAAiB,IAAI,0CAAoB,OAAO,UAAU;AAC/D,SAAK,eAAe,QAAQ,SAAS;AACrC,SAAK,QAAQ,KAAK,cAAc;AAEhC,SAAK,kBAAkB,IAAI,eAAe,MAAM;AAChD,SAAK,QAAQ,KAAK,eAAe;AAEjC,SAAK,mBAAmB,IAAI,gBAAgB,KAAK,cAAc;AAC/D,SAAK,QAAQ,KAAK,gBAAgB;AAElC,SAAK,gBAAgB,IAAI,mBAAmB;AAAA,MAC1C,MAAM;AAAA,MACN,YAAY;AAAA,MACZ;AAAA,IACF,CAAC;AACD,SAAK,QAAQ,KAAK,aAAa;AAAA,EACjC;AAAA,EAEA,MAAa,aAAa;AACxB,UAAM,eAAe,KAAK,cAAc,OAAO,IAAI;AACnD,UAAM,gBAAgB,KAAK,eAAe,OAAO,IAAI;AACrD,WAAO;AAAA,MACL,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA,eAAe,KAAK,eAAe,gBAAgB;AAAA,MACnD,eAAe,KAAK,cAAc,gBAAgB;AAAA,MAClD;AAAA,MACA,2CAA2C,KAAK,eAAe,QAAQ,KAAK,eAAe;AAAA,MAC3F;AAAA,MACA,oCAAoC,KAAK,cAAc,QAAQ,KAAK,cAAc;AAAA,MAClF;AAAA,IACF,EAAE,KAAK,IAAI;AAAA,EACb;AACF;",
  "names": []
}
