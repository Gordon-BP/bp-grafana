{
  "version": 3,
  "sources": ["../src/package-ref.ts"],
  "sourcesContent": ["import semver from 'semver'\nimport * as utils from './utils'\n\nexport type UUIDPackageRef = {\n  type: 'id'\n  id: string\n}\n\nexport type NamePackageRef = {\n  type: 'name'\n  name: string\n  version: string\n}\n\nexport type LocalPackageRef = {\n  type: 'path'\n  path: string\n}\n\nexport type ApiPackageRef = UUIDPackageRef | NamePackageRef\nexport type PackageRef = ApiPackageRef | LocalPackageRef\n\nconst LATEST_TAG = 'latest'\n\nexport const isLatest = (ref: NamePackageRef): boolean => ref.version === LATEST_TAG\n\nexport const formatPackageRef = (ref: PackageRef): string => {\n  if (ref.type === 'path') {\n    return ref.path\n  }\n  if (ref.type === 'id') {\n    return ref.id\n  }\n  return `${ref.name}@${ref.version}`\n}\n\nexport const parsePackageRef = (ref: string): PackageRef | undefined => {\n  if (!ref) {\n    return\n  }\n\n  if (utils.id.isValidID(ref)) {\n    return { type: 'id', id: ref }\n  }\n\n  if (utils.path.isPath(ref)) {\n    return { type: 'path', path: ref }\n  }\n\n  if (!ref.includes('@')) {\n    return { type: 'name', name: ref, version: LATEST_TAG }\n  }\n\n  const [name, version] = ref.split('@')\n  if (!name || !version) {\n    return\n  }\n\n  const cleanedVersion = version === LATEST_TAG ? version : semver.clean(version)\n  if (!cleanedVersion) {\n    return\n  }\n\n  return { type: 'name', name, version: cleanedVersion }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmB;AACnB,YAAuB;AAqBvB,MAAM,aAAa;AAEZ,MAAM,WAAW,CAAC,QAAiC,IAAI,YAAY;AAEnE,MAAM,mBAAmB,CAAC,QAA4B;AAC3D,MAAI,IAAI,SAAS,QAAQ;AACvB,WAAO,IAAI;AAAA,EACb;AACA,MAAI,IAAI,SAAS,MAAM;AACrB,WAAO,IAAI;AAAA,EACb;AACA,SAAO,GAAG,IAAI,QAAQ,IAAI;AAC5B;AAEO,MAAM,kBAAkB,CAAC,QAAwC;AACtE,MAAI,CAAC,KAAK;AACR;AAAA,EACF;AAEA,MAAI,MAAM,GAAG,UAAU,GAAG,GAAG;AAC3B,WAAO,EAAE,MAAM,MAAM,IAAI,IAAI;AAAA,EAC/B;AAEA,MAAI,MAAM,KAAK,OAAO,GAAG,GAAG;AAC1B,WAAO,EAAE,MAAM,QAAQ,MAAM,IAAI;AAAA,EACnC;AAEA,MAAI,CAAC,IAAI,SAAS,GAAG,GAAG;AACtB,WAAO,EAAE,MAAM,QAAQ,MAAM,KAAK,SAAS,WAAW;AAAA,EACxD;AAEA,QAAM,CAAC,MAAM,OAAO,IAAI,IAAI,MAAM,GAAG;AACrC,MAAI,CAAC,QAAQ,CAAC,SAAS;AACrB;AAAA,EACF;AAEA,QAAM,iBAAiB,YAAY,aAAa,UAAU,cAAAA,QAAO,MAAM,OAAO;AAC9E,MAAI,CAAC,gBAAgB;AACnB;AAAA,EACF;AAEA,SAAO,EAAE,MAAM,QAAQ,MAAM,SAAS,eAAe;AACvD;",
  "names": ["semver"]
}
