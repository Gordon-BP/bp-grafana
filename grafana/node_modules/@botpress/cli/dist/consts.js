"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var consts_exports = {};
__export(consts_exports, {
  cliRootDir: () => cliRootDir,
  defaultBotpressApiUrl: () => defaultBotpressApiUrl,
  defaultBotpressAppUrl: () => defaultBotpressAppUrl,
  defaultBotpressHome: () => defaultBotpressHome,
  defaultInstallPath: () => defaultInstallPath,
  defaultTunnelUrl: () => defaultTunnelUrl,
  defaultWorkDir: () => defaultWorkDir,
  distDirName: () => distDirName,
  emptyBotDirName: () => emptyBotDirName,
  emptyIntegrationDirName: () => emptyIntegrationDirName,
  fromCliRootDir: () => fromCliRootDir,
  fromHomeDir: () => fromHomeDir,
  fromOutDir: () => fromOutDir,
  fromWorkDir: () => fromWorkDir,
  helloWorldIntegrationDirName: () => helloWorldIntegrationDirName,
  installDirName: () => installDirName,
  outDirName: () => outDirName,
  webhookMessageIntegrationDirName: () => webhookMessageIntegrationDirName
});
module.exports = __toCommonJS(consts_exports);
var import_os = __toESM(require("os"));
var import_path = __toESM(require("path"));
var import_root = require("./root");
const defaultBotpressHome = import_path.default.join(import_os.default.homedir(), ".botpress");
const defaultWorkDir = process.cwd();
const defaultInstallPath = process.cwd();
const defaultBotpressApiUrl = "https://api.botpress.cloud";
const defaultBotpressAppUrl = "https://app.botpress.cloud";
const defaultTunnelUrl = "https://tunnel.botpress.cloud";
const cliRootDir = import_root.CLI_ROOT_DIR;
const emptyBotDirName = "empty-bot";
const emptyIntegrationDirName = "empty-integration";
const helloWorldIntegrationDirName = "hello-world";
const webhookMessageIntegrationDirName = "webhook-message";
const installDirName = "bp_modules";
const outDirName = ".botpress";
const distDirName = "dist";
const fromCliRootDir = {
  emptyBotTemplate: import_path.default.join("templates", emptyBotDirName),
  emptyIntegrationTemplate: import_path.default.join("templates", emptyIntegrationDirName),
  helloWorldIntegrationTemplate: import_path.default.join("templates", helloWorldIntegrationDirName),
  webhookMessageIntegrationTemplate: import_path.default.join("templates", webhookMessageIntegrationDirName)
};
const fromHomeDir = {
  globalCacheFile: "global.cache.json"
};
const fromOutDir = {
  distDir: distDirName,
  outFile: import_path.default.join(distDirName, "index.js"),
  implementationDir: "implementation",
  secretsDir: "secrets",
  projectCacheFile: "project.cache.json"
};
const fromWorkDir = {
  integrationDefinition: "integration.definition.ts",
  interfaceDefinition: "interface.definition.ts",
  botDefinition: "bot.definition.ts",
  entryPoint: import_path.default.join("src", "index.ts"),
  outDir: outDirName,
  distDir: import_path.default.join(outDirName, fromOutDir.distDir),
  outFile: import_path.default.join(outDirName, fromOutDir.outFile),
  implementationDir: import_path.default.join(outDirName, fromOutDir.implementationDir),
  secretsDir: import_path.default.join(outDirName, fromOutDir.secretsDir),
  projectCacheFile: import_path.default.join(outDirName, fromOutDir.projectCacheFile)
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  cliRootDir,
  defaultBotpressApiUrl,
  defaultBotpressAppUrl,
  defaultBotpressHome,
  defaultInstallPath,
  defaultTunnelUrl,
  defaultWorkDir,
  distDirName,
  emptyBotDirName,
  emptyIntegrationDirName,
  fromCliRootDir,
  fromHomeDir,
  fromOutDir,
  fromWorkDir,
  helloWorldIntegrationDirName,
  installDirName,
  outDirName,
  webhookMessageIntegrationDirName
});
//# sourceMappingURL=consts.js.map
