"use strict";var Be=Object.create;var S=Object.defineProperty;var ve=Object.getOwnPropertyDescriptor;var be=Object.getOwnPropertyNames;var Ce=Object.getPrototypeOf,xe=Object.prototype.hasOwnProperty;var P=(t,e)=>{for(var n in e)S(t,n,{get:e[n],enumerable:!0})},E=(t,e,n,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of be(e))!xe.call(t,r)&&r!==n&&S(t,r,{get:()=>e[r],enumerable:!(o=ve(e,r))||o.enumerable});return t},p=(t,e,n)=>(E(t,e,"default"),n&&E(n,e,"default")),W=(t,e,n)=>(n=t!=null?Be(Ce(t)):{},E(e||!t||!t.__esModule?S(n,"default",{value:t,enumerable:!0}):n,t)),Ee=t=>E(S({},"__esModule",{value:!0}),t);var m={};P(m,{Bot:()=>O,BotDefinition:()=>R,BotSpecificClient:()=>B,Integration:()=>_,IntegrationDefinition:()=>A,IntegrationSpecificClient:()=>I,InterfaceDeclaration:()=>H,RuntimeError:()=>F.RuntimeError,botIdHeader:()=>v,botUserIdHeader:()=>j,configurationHeader:()=>b,configurationTypeHeader:()=>Z,integrationIdHeader:()=>N,isApiError:()=>F.isApiError,messages:()=>G,operationHeader:()=>C,parseBody:()=>T,serve:()=>x,typeHeader:()=>z,webhookIdHeader:()=>L});module.exports=Ee(m);var G={};P(G,{defaults:()=>Ae});var i={};P(i,{default:()=>K});var J=require("@bpinternal/zui");p(i,require("@bpinternal/zui"));var K=J.z;var l=i.z.string().min(1),X=i.z.object({text:l}),Y=i.z.object({markdown:l}),ee=i.z.object({imageUrl:l}),te=i.z.object({audioUrl:l}),ne=i.z.object({videoUrl:l}),ie=i.z.object({fileUrl:l,title:l.optional()}),oe=i.z.object({latitude:i.z.number(),longitude:i.z.number(),address:i.z.string().optional(),title:i.z.string().optional()}),se=i.z.object({title:l,subtitle:l.optional(),imageUrl:l.optional(),actions:i.z.array(i.z.object({action:i.z.enum(["postback","url","say"]),label:l,value:l}))}),Q=i.z.object({text:l,options:i.z.array(i.z.object({label:l,value:l}))}),Se=i.z.object({items:i.z.array(se)}),Pe=i.z.discriminatedUnion("type",[i.z.object({type:i.z.literal("text"),payload:X}),i.z.object({type:i.z.literal("markdown"),payload:Y}),i.z.object({type:i.z.literal("image"),payload:ee}),i.z.object({type:i.z.literal("audio"),payload:te}),i.z.object({type:i.z.literal("video"),payload:ne}),i.z.object({type:i.z.literal("file"),payload:ie}),i.z.object({type:i.z.literal("location"),payload:oe})]),Me=i.z.object({items:i.z.array(Pe)}),Ae={text:{schema:X},markdown:{schema:Y},image:{schema:ee},audio:{schema:te},video:{schema:ne},file:{schema:ie},location:{schema:oe},carousel:{schema:Se},card:{schema:se},dropdown:{schema:Q},choice:{schema:Q},bloc:{schema:Me}};var v="x-bot-id",j="x-bot-user-id",N="x-integration-id",L="x-webhook-id",Z="x-bp-configuration-type",b="x-bp-configuration",C="x-bp-operation",z="x-bp-type";var re=require("node:http");var y=console;function T(t){if(!t.body)throw new Error("Missing body");return JSON.parse(t.body)}async function x(t,e=8072,n=De){let o=(0,re.createServer)(async(r,a)=>{try{let s=await we(r);if(s.path==="/health"){a.writeHead(200).end("ok");return}let c=await t(s);a.writeHead(c?.status??200,c?.headers??{}).end(c?.body??"{}")}catch(s){y.error("Error while handling request",{error:s?.message??"Internal error occured"}),a.writeHead(500).end(JSON.stringify({error:s?.message??"Internal error occured"}))}});return o.listen(e,()=>n(e)),o}async function we(t){let e=await Ue(t),n={};for(let r=0;r<t.rawHeaders.length;r+=2){let a=t.rawHeaders[r].toLowerCase(),s=t.rawHeaders[r+1];n[a]=s}let o=new URL(t.url??"",t.headers.host?`http://${t.headers.host}`:"http://botpress.cloud");return{body:e,path:o.pathname,query:ke(o.search,"?"),headers:n,method:t.method?.toUpperCase()??"GET"}}function ke(t,e){return t.indexOf(e)===0?t.slice(e.length):t}async function Ue(t){return new Promise((e,n)=>{if(t.method!=="POST"&&t.method!=="PUT"&&t.method!=="PATCH")return e(void 0);let o="";t.on("data",r=>o+=r.toString()),t.on("error",r=>n(r)),t.on("end",()=>e(o))})}function De(t){y.info(`Listening on port ${t}`)}p(m,i,module.exports);var F=require("@botpress/client");var ae=require("@bpinternal/zui");var _e=ae.z.enum(["webhook_received","message_created","action_triggered","register","unregister","ping","create_user","create_conversation"]),ce=t=>{let e=t[v],n=t[j],o=t[N],r=t[L],a=t[Z],s=t[b],c=_e.parse(t[C]);if(!e)throw new Error("Missing bot headers");if(!n)throw new Error("Missing bot user headers");if(!o)throw new Error("Missing integration headers");if(!r)throw new Error("Missing webhook headers");if(!s)throw new Error("Missing configuration headers");if(!c)throw new Error("Missing operation headers");return{botId:e,botUserId:n,integrationId:o,webhookId:r,operation:c,configurationType:a??null,configuration:s?JSON.parse(Buffer.from(s,"base64").toString("utf-8")):{}}};var u={};P(u,{mapValues:()=>Re,pairs:()=>ge});var ge=t=>Object.entries(t),Re=(t,e)=>Object.fromEntries(ge(t).map(([n,o])=>[n,e(o,n)]));var M=Symbol("schemaName"),le=t=>t?u.mapValues(t,(n,o)=>({...n,[M]:o})):{},pe=t=>M in t&&t[M]!==void 0,de=t=>t[M];var A=class{constructor(e){this.props=e;this.name=e.name,this.version=e.version,this.icon=e.icon,this.readme=e.readme,this.title=e.title,this.identifier=e.identifier,this.description=e.description,this.configuration=e.configuration,this.configurations=e.configurations,this.events=e.events,this.actions=e.actions,this.channels=e.channels,this.states=e.states,this.user=e.user,this.secrets=e.secrets,this.entities=e.entities,this.interfaces=e.interfaces}name;version;title;description;icon;readme;configuration;configurations;events;actions;channels;states;user;secrets;identifier;entities;interfaces;extend(e,n){let o=n(le(this.entities)),r=u.pairs(o).find(([g,h])=>!pe(h));if(r)throw new Error(`Cannot extend interface "${e.definition.name}" with entity "${r[0]}"; the provided schema is not part of the integration's entities.`);let a=this;a.interfaces??={};let s=u.mapValues(o,g=>({name:de(g),schema:g.schema})),c=Object.values(s).map(g=>g.name),d=c.length===0?e.definition.name:`${e.definition.name}<${c.join(",")}>`;return a.interfaces[d]={...e,entities:s},this}};var f=require("@botpress/client");var ue=require("@botpress/client"),w={retries:3,retryCondition:t=>ue.axiosRetry.isNetworkOrIdempotentRequestError(t)||[429,502].includes(t.response?.status??0),retryDelay:t=>t*1e3};var k=class{_cost=0;get cost(){return this._cost}setCost(e){this._cost=e}toJSON(){return{cost:this.cost}}};var I=class{constructor(e){this._client=e}createConversation=e=>this._client.createConversation(e);getConversation=e=>this._client.getConversation(e);listConversations=e=>this._client.listConversations(e);getOrCreateConversation=e=>this._client.getOrCreateConversation(e);updateConversation=e=>this._client.updateConversation(e);deleteConversation=e=>this._client.deleteConversation(e);listParticipants=e=>this._client.listParticipants(e);addParticipant=e=>this._client.addParticipant(e);getParticipant=e=>this._client.getParticipant(e);removeParticipant=e=>this._client.removeParticipant(e);createEvent=e=>this._client.createEvent(e);getEvent=e=>this._client.getEvent(e);listEvents=e=>this._client.listEvents(e);createMessage=e=>this._client.createMessage(e);getOrCreateMessage=e=>this._client.getOrCreateMessage(e);getMessage=e=>this._client.getMessage(e);updateMessage=e=>this._client.updateMessage(e);listMessages=e=>this._client.listMessages(e);deleteMessage=e=>this._client.deleteMessage(e);createUser=e=>this._client.createUser(e);getUser=e=>this._client.getUser(e);listUsers=e=>this._client.listUsers(e);getOrCreateUser=e=>this._client.getOrCreateUser(e);updateUser=e=>this._client.updateUser(e);deleteUser=e=>this._client.deleteUser(e);getState=e=>this._client.getState(e);setState=e=>this._client.setState(e);getOrSetState=e=>this._client.getOrSetState(e);patchState=e=>this._client.patchState(e);configureIntegration=e=>this._client.configureIntegration(e);uploadFile=e=>this._client.uploadFile(e);upsertFile=e=>this._client.upsertFile(e);deleteFile=e=>this._client.deleteFile(e);listFiles=e=>this._client.listFiles(e);getFile=e=>this._client.getFile(e);updateFileMetadata=e=>this._client.updateFileMetadata(e)};var $=W(require("util")),U=t=>{if(process.env.BP_LOG_FORMAT==="json")return JSON.stringify({msg:$.default.format(...t),visible_to_bot_owner:!0});{let[e,...n]=t;return $.default.format(`[For Bot Owner] ${e}`,...n)}},D={forBot:()=>({info:(...t)=>{console.info(U(t))},warn:(...t)=>{console.warn(U(t))},error:(...t)=>{console.error(U(t))},debug:(...t)=>{console.debug(U(t))}})};var Te=t=>async e=>{let n=ce(e.headers),o=new f.Client({botId:n.botId,integrationId:n.integrationId,retry:w}),r=new I(o),a={ctx:n,req:e,client:r,logger:D,instance:t};try{let s;switch(n.operation){case"webhook_received":s=await He(a);break;case"register":s=await Fe(a);break;case"unregister":s=await Ke(a);break;case"message_created":s=await Ne(a);break;case"action_triggered":s=await Le(a);break;case"ping":s=await Oe(a);break;case"create_user":s=await Ge(a);break;case"create_conversation":s=await je(a);break;default:throw new Error(`Unknown operation ${n.operation}`)}return s?{...s,status:s.status??200}:{status:200}}catch(s){if((0,f.isApiError)(s)){let d=new f.RuntimeError(s.message,s);return D.forBot().error(d.message),{status:d.code,body:JSON.stringify(d.toJSON())}}console.error(s);let c=new f.RuntimeError("An unexpected error occurred in the integration. Bot owners: Check logs for more informations. Integration owners: throw a RuntimeError to return a custom error message instead.");return D.forBot().error(c.message),{status:c.code,body:JSON.stringify(c.toJSON())}}},Oe=async t=>{},He=async({client:t,ctx:e,req:n,logger:o,instance:r})=>{let{req:a}=T(n);return r.webhook({client:t,ctx:e,req:a,logger:o})},Fe=async({client:t,ctx:e,req:n,logger:o,instance:r})=>{if(!r.register)return;let{webhookUrl:a}=T(n);await r.register({client:t,ctx:e,webhookUrl:a,logger:o})},Ke=async({client:t,ctx:e,req:n,logger:o,instance:r})=>{if(!r.unregister)return;let{webhookUrl:a}=T(n);await r.unregister({ctx:e,webhookUrl:a,client:t,logger:o})},Ge=async({client:t,ctx:e,req:n,logger:o,instance:r})=>{if(!r.createUser)return;let{tags:a}=T(n);return await r.createUser({ctx:e,client:t,tags:a,logger:o})},je=async({client:t,ctx:e,req:n,logger:o,instance:r})=>{if(!r.createConversation)return;let{channel:a,tags:s}=T(n);return await r.createConversation({ctx:e,client:t,channel:a,tags:s,logger:o})},Ne=async({ctx:t,req:e,client:n,logger:o,instance:r})=>{let{conversation:a,user:s,type:c,payload:d,message:g}=T(e),h=r.channels[a.channel];if(!h)throw new Error(`Channel ${a.channel} not found`);let V=h.messages[c];if(!V)throw new Error(`Message of type ${c} not found in channel ${a.channel}`);await V({ctx:t,conversation:a,message:g,user:s,type:c,client:n,payload:d,ack:async({tags:Ie})=>{await n.updateMessage({id:g.id,tags:Ie})},logger:o})},Le=async({req:t,ctx:e,client:n,logger:o,instance:r})=>{let{input:a,type:s}=T(t);if(!s)throw new Error("Missing action type");let c=r.actions[s];if(!c)throw new Error(`Action ${s} not found`);let d=new k,h={output:await c({ctx:e,input:a,client:n,type:s,logger:o,metadata:d}),meta:d.toJSON()};return{body:JSON.stringify(h)}};var _=class{constructor(e){this.props=e;this.actions=e.actions,this.channels=e.channels,this.register=e.register,this.unregister=e.unregister,this.createUser=e.createUser,this.createConversation=e.createConversation,this.webhook=e.handler}actions;channels;register;unregister;createUser;createConversation;webhook;handler=Te(this);start=e=>x(this.handler,e)};var R=class{constructor(e){this.props=e;this.integrations=e.integrations,this.user=e.user,this.conversation=e.conversation,this.message=e.message,this.states=e.states,this.configuration=e.configuration,this.events=e.events,this.recurringEvents=e.recurringEvents}integrations;user;conversation;message;states;configuration;events;recurringEvents;add(e,n){let o=this;return o.integrations||(o.integrations={}),o.integrations[e.definition.name]={enabled:n.enabled,...e,configurationType:n.configurationType,configuration:n.configuration},this}};var he=W(require("@botpress/client"));var B=class{constructor(e){this._client=e}getConversation=e=>this._client.getConversation(e);listConversations=e=>this._client.listConversations(e);updateConversation=e=>this._client.updateConversation(e);deleteConversation=e=>this._client.deleteConversation(e);listParticipants=e=>this._client.listParticipants(e);addParticipant=e=>this._client.addParticipant(e);getParticipant=e=>this._client.getParticipant(e);removeParticipant=e=>this._client.removeParticipant(e);getEvent=e=>this._client.getEvent(e);listEvents=e=>this._client.listEvents(e);createMessage=e=>this._client.createMessage(e);getOrCreateMessage=e=>this._client.getOrCreateMessage(e);getMessage=e=>this._client.getMessage(e);updateMessage=e=>this._client.updateMessage(e);listMessages=e=>this._client.listMessages(e);deleteMessage=e=>this._client.deleteMessage(e);getUser=e=>this._client.getUser(e);listUsers=e=>this._client.listUsers(e);updateUser=e=>this._client.updateUser(e);deleteUser=e=>this._client.deleteUser(e);getState=e=>this._client.getState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));setState=e=>this._client.setState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));getOrSetState=e=>this._client.getOrSetState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));patchState=e=>this._client.patchState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));callAction=e=>this._client.callAction(e);uploadFile=e=>this._client.uploadFile(e);upsertFile=e=>this._client.upsertFile(e);deleteFile=e=>this._client.deleteFile(e);listFiles=e=>this._client.listFiles(e);getFile=e=>this._client.getFile(e);updateFileMetadata=e=>this._client.updateFileMetadata(e);searchFiles=e=>this._client.searchFiles(e);createConversation=e=>this._client.createConversation(e);getOrCreateConversation=e=>this._client.getOrCreateConversation(e);createUser=e=>this._client.createUser(e);getOrCreateUser=e=>this._client.getOrCreateUser(e)};var me=require("@bpinternal/zui");var Ze=me.z.enum(["event_received","register","unregister","ping","action_triggered"]),fe=t=>{let e=t[v],n=t[b],o=t[z],r=Ze.parse(t[C]);if(!e)throw new Error("Missing bot headers");if(!o)throw new Error("Missing type headers");if(!n)throw new Error("Missing configuration headers");if(!r)throw new Error("Missing operation headers");return{botId:e,operation:r,type:o,configuration:n?JSON.parse(Buffer.from(n,"base64").toString("utf-8")):{}}};var ye=t=>async e=>{let n=fe(e.headers);n.operation!=="ping"&&y.info(`Received ${n.operation} operation for bot ${n.botId} of type ${n.type}`);let o=new he.Client({botId:n.botId,retry:w}),r=new B(o),a={req:e,ctx:n,client:r,instance:t};switch(n.operation){case"action_triggered":throw new Error(`Operation ${n.operation} not supported yet`);case"event_received":await Ve(a);break;case"register":await qe(a);break;case"unregister":await $e(a);break;case"ping":await ze(a);break;default:throw new Error(`Unknown operation ${n.operation}`)}return{status:200}},ze=async t=>{},qe=async t=>{},$e=async t=>{},Ve=async({ctx:t,req:e,client:n,instance:o})=>{y.debug(`Received event ${t.type}`);let r=T(e),a=r.event;switch(t.type){case"message_created":let s={user:a.payload.user,conversation:a.payload.conversation,message:a.payload.message,states:a.payload.states,event:a};await Promise.all(o.messageHandlers.map(g=>g({client:n,ctx:t,...s})));break;case"state_expired":let c={state:a.payload.state};await Promise.all(o.stateExpiredHandlers.map(g=>g({client:n,ctx:t,...c})));break;default:let d={event:r.event};await Promise.all(o.eventHandlers.map(g=>g({client:n,ctx:t,...d})))}};var O=class{constructor(e){this.props=e}_state={messageHandlers:[],eventHandlers:[],stateExpiredHandlers:[]};message=e=>{this._state.messageHandlers.push(e)};event=e=>{this._state.eventHandlers.push(e)};stateExpired=e=>{this._state.stateExpiredHandlers.push(e)};handler=ye(this._state);start=e=>x(this.handler,e)};var H=class{constructor(e){this.props=e;this.name=e.name,this.version=e.version,this.entities=e.entities??{},this.templateName=e.templateName;let n=this._getEntityReference(this.entities),o=e.events===void 0?{}:u.mapValues(e.events,s=>({...s,schema:s.schema(n)})),r=e.actions===void 0?{}:u.mapValues(e.actions,s=>({...s,input:{...s.input,schema:s.input.schema(n)},output:{...s.output,schema:s.output.schema(n)}})),a=e.channels===void 0?{}:u.mapValues(e.channels,s=>({...s,messages:u.mapValues(s.messages,c=>({...c,schema:c.schema(n)}))}));this.events=o,this.actions=r,this.channels=a}name;version;entities;events;actions;channels;templateName;_getEntityReference=e=>{let n={};for(let o of Object.keys(e))n[o]=K.ref(o);return n}};0&&(module.exports={Bot,BotDefinition,BotSpecificClient,Integration,IntegrationDefinition,IntegrationSpecificClient,InterfaceDeclaration,RuntimeError,botIdHeader,botUserIdHeader,configurationHeader,configurationTypeHeader,integrationIdHeader,isApiError,messages,operationHeader,parseBody,serve,typeHeader,webhookIdHeader});
//# sourceMappingURL=index.js.map
