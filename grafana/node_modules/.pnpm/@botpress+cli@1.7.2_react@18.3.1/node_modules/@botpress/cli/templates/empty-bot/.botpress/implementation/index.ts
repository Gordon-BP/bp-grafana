/* eslint-disable */
/* tslint:disable */
// This file is generated. Do not edit it manually.

import * as sdk from "@botpress/sdk"
import * as typings from "./typings/index"
export * from "./typings/index"

type TBot = sdk.DefaultBot<typings.TBot>

export class Bot extends sdk.Bot<TBot> {}

// extra types

type AsyncFunction = (...args: any[]) => Promise<any>
export type EventHandler = Parameters<Bot['event']>[0]
export type EventHandlerProps = Parameters<EventHandler>[0]
export type MessageHandler = Parameters<Bot['message']>[0]
export type MessageHandlerProps = Parameters<MessageHandler>[0]
export type Client = EventHandlerProps['client']
export type ClientOperation = keyof {
  [K in keyof Client as Client[K] extends AsyncFunction ? K : never]: null
}
export type ClientInputs = {
  [K in ClientOperation]: Parameters<Client[K]>[0]
}
export type ClientOutputs = {
  [K in ClientOperation]: Awaited<ReturnType<Client[K]>>
}
// @deprecated
export type BotEvent = EventHandlerProps['event']
// @deprecated
export type BotEvents = {
  [K in BotEvent['type']]: Extract<BotEvent, { type: K }>
}
// @deprecated
export type BotState = ClientOutputs['getState']['state']
// @deprecated
export type BotStates = {
  [K in BotState['name']]: Extract<BotState, { type: K }>['payload']
}