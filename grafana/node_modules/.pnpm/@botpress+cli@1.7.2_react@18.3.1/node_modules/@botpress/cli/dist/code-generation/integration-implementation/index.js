"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var integration_implementation_exports = {};
__export(integration_implementation_exports, {
  generateIntegrationImplementation: () => generateIntegrationImplementation
});
module.exports = __toCommonJS(integration_implementation_exports);
var consts = __toESM(require("../consts"));
var import_integration_implementation = require("./integration-implementation");
var import_integration_secret = require("./integration-secret");
const generateIntegrationImplementationCls = async (sdkIntegrationDefinition, implPath) => {
  const indexModule = new import_integration_implementation.IntegrationImplementationModule(sdkIntegrationDefinition);
  indexModule.unshift(implPath);
  return indexModule.flatten();
};
const generateIntegrationSecrets = async (sdkIntegrationDefinition, secretsPath) => {
  const indexModule = new import_integration_secret.IntegrationSecretIndexModule(sdkIntegrationDefinition);
  indexModule.unshift(secretsPath);
  return indexModule.flatten();
};
const generateIntegrationImplementationIndex = async (implPath, secretsPath) => {
  let content = "";
  content += `export * from './${implPath}'
`;
  content += `export * from './${secretsPath}'
`;
  return {
    path: consts.INDEX_FILE,
    content
  };
};
const generateIntegrationImplementation = async (sdkIntegrationDefinition) => {
  const implPath = consts.fromOutDir.implementationDir;
  const secretsPath = consts.fromOutDir.secretsDir;
  const implFiles = await generateIntegrationImplementationCls(sdkIntegrationDefinition, implPath);
  const secretFiles = await generateIntegrationSecrets(sdkIntegrationDefinition, secretsPath);
  const indexFile = await generateIntegrationImplementationIndex(implPath, secretsPath);
  return [...implFiles, ...secretFiles, indexFile];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  generateIntegrationImplementation
});
//# sourceMappingURL=index.js.map
