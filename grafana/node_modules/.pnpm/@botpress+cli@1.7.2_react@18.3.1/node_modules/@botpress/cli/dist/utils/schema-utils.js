"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var schema_utils_exports = {};
__export(schema_utils_exports, {
  dereferenceSchema: () => dereferenceSchema,
  mapZodToJsonSchema: () => mapZodToJsonSchema
});
module.exports = __toCommonJS(schema_utils_exports);
var import_json_schema_ref_parser = require("@apidevtools/json-schema-ref-parser");
var import_sdk = require("@botpress/sdk");
const isObjectSchema = (schema) => schema.type === "object";
async function mapZodToJsonSchema(definition) {
  let schema = import_sdk.transforms.zuiToJsonSchema(definition.schema, { target: "jsonSchema7" });
  schema = await dereferenceSchema(schema);
  if (!isObjectSchema(schema) || !definition.ui) {
    return schema;
  }
  for (const [key, value] of Object.entries(definition.ui ?? {})) {
    const property = schema.properties?.[key];
    if (!property) {
      continue;
    }
    if (!!value?.title) {
      ;
      property.title = value.title;
    }
    if (!!value?.examples) {
      ;
      property.examples = value.examples;
    }
  }
  return schema;
}
const dereferenceSchema = async (schema) => {
  return (0, import_json_schema_ref_parser.dereference)(schema, {
    resolve: {
      external: false,
      file: false,
      http: false
    }
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  dereferenceSchema,
  mapZodToJsonSchema
});
//# sourceMappingURL=schema-utils.js.map
