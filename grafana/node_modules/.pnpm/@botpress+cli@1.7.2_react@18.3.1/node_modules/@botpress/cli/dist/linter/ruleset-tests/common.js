"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var common_exports = {};
__export(common_exports, {
  createDescribeRule: () => createDescribeRule
});
module.exports = __toCommonJS(common_exports);
var import_spectral_core = require("@stoplight/spectral-core");
var import_spectral_parsers = require("@stoplight/spectral-parsers");
var import_vitest = require("vitest");
const createDescribeRule = () => (ruleset) => (ruleName, fn) => import_vitest.describe.concurrent(ruleName, () => {
  const spectral = new import_spectral_core.Spectral();
  spectral.setRuleset({ ...ruleset, rules: { [ruleName]: ruleset.rules[ruleName] } });
  const lintFn = (definition) => spectral.run(new import_spectral_core.Document(JSON.stringify(definition), import_spectral_parsers.Json));
  fn(lintFn);
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createDescribeRule
});
//# sourceMappingURL=common.js.map
