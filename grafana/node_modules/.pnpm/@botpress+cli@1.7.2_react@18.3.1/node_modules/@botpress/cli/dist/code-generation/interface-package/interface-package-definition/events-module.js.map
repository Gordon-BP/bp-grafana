{
  "version": 3,
  "sources": ["../../../../src/code-generation/interface-package/interface-package-definition/events-module.ts"],
  "sourcesContent": ["import { jsonSchemaToTypescriptZuiSchema } from '../../generators'\nimport { Module, ReExportVariableModule } from '../../module'\nimport * as strings from '../../strings'\nimport * as types from './typings'\n\nexport class EventModule extends Module {\n  public constructor(name: string, private _event: types.ApiEventDefinition) {\n    const eventName = name\n    const exportName = strings.varName(eventName)\n    super({ path: `${name}.ts`, exportName })\n  }\n\n  public async getContent() {\n    if (!this._event.schema) {\n      return `export const ${this.exportName} = z.object({});`\n    }\n    return jsonSchemaToTypescriptZuiSchema(this._event.schema, this.exportName)\n  }\n}\n\nexport class EventsModule extends ReExportVariableModule {\n  public constructor(events: Record<string, types.ApiEventDefinition>) {\n    super({ exportName: strings.varName('events') })\n    for (const [eventName, event] of Object.entries(events)) {\n      const module = new EventModule(eventName, event)\n      this.pushDep(module)\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgD;AAChD,oBAA+C;AAC/C,cAAyB;AAGlB,MAAM,oBAAoB,qBAAO;AAAA,EAC/B,YAAY,MAAsB,QAAkC;AACzE,UAAM,YAAY;AAClB,UAAM,aAAa,QAAQ,QAAQ,SAAS;AAC5C,UAAM,EAAE,MAAM,GAAG,WAAW,WAAW,CAAC;AAHD;AAAA,EAIzC;AAAA,EAEA,MAAa,aAAa;AACxB,QAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,aAAO,gBAAgB,KAAK;AAAA,IAC9B;AACA,eAAO,mDAAgC,KAAK,OAAO,QAAQ,KAAK,UAAU;AAAA,EAC5E;AACF;AAEO,MAAM,qBAAqB,qCAAuB;AAAA,EAChD,YAAY,QAAkD;AACnE,UAAM,EAAE,YAAY,QAAQ,QAAQ,QAAQ,EAAE,CAAC;AAC/C,eAAW,CAAC,WAAW,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACvD,YAAMA,UAAS,IAAI,YAAY,WAAW,KAAK;AAC/C,WAAK,QAAQA,OAAM;AAAA,IACrB;AAAA,EACF;AACF;",
  "names": ["module"]
}
