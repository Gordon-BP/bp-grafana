{
  "version": 3,
  "sources": ["../../../../src/code-generation/integration-package/integration-package-definition/actions-module.ts"],
  "sourcesContent": ["import { jsonSchemaToTypescriptZuiSchema } from '../../generators'\nimport { Module, ReExportVariableModule } from '../../module'\nimport * as strings from '../../strings'\nimport * as types from './typings'\n\ntype ActionInput = types.ApiActionDefinition['input']\ntype ActionOutput = types.ApiActionDefinition['output']\n\nexport class ActionInputModule extends Module {\n  public constructor(private _input: ActionInput) {\n    const name = 'input'\n    const exportName = strings.varName(name)\n    super({ path: `${name}.ts`, exportName })\n  }\n\n  public async getContent() {\n    return jsonSchemaToTypescriptZuiSchema(this._input.schema, this.exportName)\n  }\n}\n\nexport class ActionOutputModule extends Module {\n  public constructor(private _output: ActionOutput) {\n    const name = 'output'\n    const exportName = strings.varName(name)\n    super({ path: `${name}.ts`, exportName })\n  }\n\n  public async getContent() {\n    return jsonSchemaToTypescriptZuiSchema(this._output.schema, this.exportName)\n  }\n}\n\nexport class ActionModule extends ReExportVariableModule {\n  public constructor(actionName: string, action: types.ApiActionDefinition) {\n    super({ exportName: strings.varName(actionName) })\n\n    const inputModule = new ActionInputModule(action.input)\n    const outputModule = new ActionOutputModule(action.output)\n\n    this.pushDep(inputModule)\n    this.pushDep(outputModule)\n  }\n}\n\nexport class ActionsModule extends ReExportVariableModule {\n  public constructor(actions: Record<string, types.ApiActionDefinition>) {\n    super({ exportName: strings.varName('actions') })\n    for (const [actionName, action] of Object.entries(actions)) {\n      const module = new ActionModule(actionName, action)\n      module.unshift(actionName)\n      this.pushDep(module)\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgD;AAChD,oBAA+C;AAC/C,cAAyB;AAMlB,MAAM,0BAA0B,qBAAO;AAAA,EACrC,YAAoB,QAAqB;AAC9C,UAAM,OAAO;AACb,UAAM,aAAa,QAAQ,QAAQ,IAAI;AACvC,UAAM,EAAE,MAAM,GAAG,WAAW,WAAW,CAAC;AAHf;AAAA,EAI3B;AAAA,EAEA,MAAa,aAAa;AACxB,eAAO,mDAAgC,KAAK,OAAO,QAAQ,KAAK,UAAU;AAAA,EAC5E;AACF;AAEO,MAAM,2BAA2B,qBAAO;AAAA,EACtC,YAAoB,SAAuB;AAChD,UAAM,OAAO;AACb,UAAM,aAAa,QAAQ,QAAQ,IAAI;AACvC,UAAM,EAAE,MAAM,GAAG,WAAW,WAAW,CAAC;AAHf;AAAA,EAI3B;AAAA,EAEA,MAAa,aAAa;AACxB,eAAO,mDAAgC,KAAK,QAAQ,QAAQ,KAAK,UAAU;AAAA,EAC7E;AACF;AAEO,MAAM,qBAAqB,qCAAuB;AAAA,EAChD,YAAY,YAAoB,QAAmC;AACxE,UAAM,EAAE,YAAY,QAAQ,QAAQ,UAAU,EAAE,CAAC;AAEjD,UAAM,cAAc,IAAI,kBAAkB,OAAO,KAAK;AACtD,UAAM,eAAe,IAAI,mBAAmB,OAAO,MAAM;AAEzD,SAAK,QAAQ,WAAW;AACxB,SAAK,QAAQ,YAAY;AAAA,EAC3B;AACF;AAEO,MAAM,sBAAsB,qCAAuB;AAAA,EACjD,YAAY,SAAoD;AACrE,UAAM,EAAE,YAAY,QAAQ,QAAQ,SAAS,EAAE,CAAC;AAChD,eAAW,CAAC,YAAY,MAAM,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC1D,YAAMA,UAAS,IAAI,aAAa,YAAY,MAAM;AAClD,MAAAA,QAAO,QAAQ,UAAU;AACzB,WAAK,QAAQA,OAAM;AAAA,IACrB;AAAA,EACF;AACF;",
  "names": ["module"]
}
