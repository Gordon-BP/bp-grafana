"use strict";
var import_vitest = require("vitest");
var import_schema_utils = require("./schema-utils");
(0, import_vitest.describe)("dereferenceSchema", () => {
  (0, import_vitest.it)("should do nothing if no $ref", async () => {
    const schema = { type: "object" };
    const result = await (0, import_schema_utils.dereferenceSchema)(schema);
    (0, import_vitest.expect)(result).toEqual(schema);
  });
  (0, import_vitest.it)("should dereference local $ref", async () => {
    const schema = {
      type: "object",
      properties: {
        foo: { $ref: "#/$defs/foo" },
        bar: { $ref: "#/definitions/bar" }
      },
      $defs: {
        foo: { type: "string" }
      },
      definitions: {
        bar: { type: "number" }
      }
    };
    const result = await (0, import_schema_utils.dereferenceSchema)(schema);
    (0, import_vitest.expect)(result).toEqual({
      type: "object",
      properties: {
        foo: { type: "string" },
        bar: { type: "number" }
      },
      $defs: {
        foo: { type: "string" }
      },
      definitions: {
        bar: { type: "number" }
      }
    });
  });
  (0, import_vitest.it)("should ignore non-local $ref", async () => {
    const schema = {
      type: "object",
      properties: {
        foo: { $ref: "TItem" }
      }
    };
    const result = await (0, import_schema_utils.dereferenceSchema)(schema);
    (0, import_vitest.expect)(result).toEqual(schema);
  });
});
//# sourceMappingURL=schema-utils.test.js.map
