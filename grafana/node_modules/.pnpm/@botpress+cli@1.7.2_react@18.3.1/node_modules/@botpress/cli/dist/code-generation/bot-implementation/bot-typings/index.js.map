{
  "version": 3,
  "sources": ["../../../../src/code-generation/bot-implementation/bot-typings/index.ts"],
  "sourcesContent": ["import * as sdk from '@botpress/sdk'\nimport * as consts from '../../consts'\nimport { IntegrationTypingsModule } from '../../integration-implementation/integration-typings'\nimport { Module, ReExportTypeModule } from '../../module'\nimport { ActionsModule } from './actions-module'\nimport { EventsModule } from './events-module'\nimport { StatesModule } from './states-module'\n\nclass BotIntegrationsModule extends ReExportTypeModule {\n  public constructor(bot: sdk.BotDefinition) {\n    super({\n      exportName: 'Integrations',\n    })\n\n    for (const [alias, integration] of Object.entries(bot.integrations ?? {})) {\n      const integrationModule = new IntegrationTypingsModule(integration.definition)\n      integrationModule.unshift(alias)\n      this.pushDep(integrationModule)\n    }\n  }\n}\n\ntype BotTypingsIndexDependencies = {\n  integrationsModule: BotIntegrationsModule\n  eventsModule: EventsModule\n  statesModule: StatesModule\n  actionsModule: ActionsModule\n}\n\nexport class BotTypingsModule extends Module {\n  private _dependencies: BotTypingsIndexDependencies\n\n  public constructor(bot: sdk.BotDefinition) {\n    super({\n      exportName: 'TBot',\n      path: consts.INDEX_FILE,\n    })\n\n    const integrationsModule = new BotIntegrationsModule(bot)\n    integrationsModule.unshift('integrations')\n    this.pushDep(integrationsModule)\n\n    const eventsModule = new EventsModule(bot.events ?? {})\n    eventsModule.unshift('events')\n    this.pushDep(eventsModule)\n\n    const statesModule = new StatesModule(bot.states ?? {})\n    statesModule.unshift('states')\n    this.pushDep(statesModule)\n\n    const actionsModule = new ActionsModule(bot.actions ?? {})\n    actionsModule.unshift('actions')\n    this.pushDep(actionsModule)\n\n    this._dependencies = {\n      integrationsModule,\n      eventsModule,\n      statesModule,\n      actionsModule,\n    }\n  }\n\n  public async getContent() {\n    const { integrationsModule, eventsModule, statesModule, actionsModule } = this._dependencies\n\n    const integrationsImport = integrationsModule.import(this)\n    const eventsImport = eventsModule.import(this)\n    const statesImport = statesModule.import(this)\n    const actionsImport = actionsModule\n\n    return [\n      consts.GENERATED_HEADER,\n      `import * as ${integrationsModule.name} from './${integrationsImport}'`,\n      `import * as ${eventsModule.name} from './${eventsModule.name}'`,\n      `import * as ${statesModule.name} from './${statesModule.name}'`,\n      `import * as ${actionsModule.name} from './${actionsImport.name}'`,\n      '',\n      `export * as ${integrationsModule.name} from './${integrationsImport}'`,\n      `export * as ${eventsModule.name} from './${eventsImport}'`,\n      `export * as ${statesModule.name} from './${statesImport}'`,\n      `export * as ${actionsModule.name} from './${actionsImport.name}'`,\n      '',\n      'export type TBot = {',\n      `  integrations: ${integrationsModule.name}.${integrationsModule.exportName}`,\n      `  events: ${eventsModule.name}.${eventsModule.exportName}`,\n      `  states: ${statesModule.name}.${statesModule.exportName}`,\n      `  actions: ${actionsModule.name}.${actionsModule.exportName}`,\n      '}',\n    ].join('\\n')\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AACxB,iCAAyC;AACzC,oBAA2C;AAC3C,4BAA8B;AAC9B,2BAA6B;AAC7B,2BAA6B;AAE7B,MAAM,8BAA8B,iCAAmB;AAAA,EAC9C,YAAY,KAAwB;AACzC,UAAM;AAAA,MACJ,YAAY;AAAA,IACd,CAAC;AAED,eAAW,CAAC,OAAO,WAAW,KAAK,OAAO,QAAQ,IAAI,gBAAgB,CAAC,CAAC,GAAG;AACzE,YAAM,oBAAoB,IAAI,oDAAyB,YAAY,UAAU;AAC7E,wBAAkB,QAAQ,KAAK;AAC/B,WAAK,QAAQ,iBAAiB;AAAA,IAChC;AAAA,EACF;AACF;AASO,MAAM,yBAAyB,qBAAO;AAAA,EACnC;AAAA,EAED,YAAY,KAAwB;AACzC,UAAM;AAAA,MACJ,YAAY;AAAA,MACZ,MAAM,OAAO;AAAA,IACf,CAAC;AAED,UAAM,qBAAqB,IAAI,sBAAsB,GAAG;AACxD,uBAAmB,QAAQ,cAAc;AACzC,SAAK,QAAQ,kBAAkB;AAE/B,UAAM,eAAe,IAAI,kCAAa,IAAI,UAAU,CAAC,CAAC;AACtD,iBAAa,QAAQ,QAAQ;AAC7B,SAAK,QAAQ,YAAY;AAEzB,UAAM,eAAe,IAAI,kCAAa,IAAI,UAAU,CAAC,CAAC;AACtD,iBAAa,QAAQ,QAAQ;AAC7B,SAAK,QAAQ,YAAY;AAEzB,UAAM,gBAAgB,IAAI,oCAAc,IAAI,WAAW,CAAC,CAAC;AACzD,kBAAc,QAAQ,SAAS;AAC/B,SAAK,QAAQ,aAAa;AAE1B,SAAK,gBAAgB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAa,aAAa;AACxB,UAAM,EAAE,oBAAoB,cAAc,cAAc,cAAc,IAAI,KAAK;AAE/E,UAAM,qBAAqB,mBAAmB,OAAO,IAAI;AACzD,UAAM,eAAe,aAAa,OAAO,IAAI;AAC7C,UAAM,eAAe,aAAa,OAAO,IAAI;AAC7C,UAAM,gBAAgB;AAEtB,WAAO;AAAA,MACL,OAAO;AAAA,MACP,eAAe,mBAAmB,gBAAgB;AAAA,MAClD,eAAe,aAAa,gBAAgB,aAAa;AAAA,MACzD,eAAe,aAAa,gBAAgB,aAAa;AAAA,MACzD,eAAe,cAAc,gBAAgB,cAAc;AAAA,MAC3D;AAAA,MACA,eAAe,mBAAmB,gBAAgB;AAAA,MAClD,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,cAAc,gBAAgB,cAAc;AAAA,MAC3D;AAAA,MACA;AAAA,MACA,mBAAmB,mBAAmB,QAAQ,mBAAmB;AAAA,MACjE,aAAa,aAAa,QAAQ,aAAa;AAAA,MAC/C,aAAa,aAAa,QAAQ,aAAa;AAAA,MAC/C,cAAc,cAAc,QAAQ,cAAc;AAAA,MAClD;AAAA,IACF,EAAE,KAAK,IAAI;AAAA,EACb;AACF;",
  "names": []
}
