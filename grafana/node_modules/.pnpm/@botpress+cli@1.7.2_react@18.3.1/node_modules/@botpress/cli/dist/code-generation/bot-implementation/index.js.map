{
  "version": 3,
  "sources": ["../../../src/code-generation/bot-implementation/index.ts"],
  "sourcesContent": ["import * as sdk from '@botpress/sdk'\nimport * as consts from '../consts'\nimport * as types from '../typings'\nimport { BotImplementationModule } from './bot-implementation'\n\nconst generateBotImplementationCls = async (\n  sdkBotDefinition: sdk.BotDefinition,\n  implPath: string\n): Promise<types.File[]> => {\n  const indexModule = new BotImplementationModule(sdkBotDefinition)\n  indexModule.unshift(implPath)\n  return indexModule.flatten()\n}\n\nconst generateBotIndex = async (implPath: string): Promise<types.File> => {\n  let content = ''\n  content += `export * from './${implPath}'\\n`\n  return {\n    path: consts.INDEX_FILE,\n    content,\n  }\n}\n\nexport const generateBotImplementation = async (sdkBotDefinition: sdk.BotDefinition): Promise<types.File[]> => {\n  const implPath = consts.fromOutDir.implementationDir\n  const typingFiles = await generateBotImplementationCls(sdkBotDefinition, implPath)\n  const indexFile = await generateBotIndex(implPath)\n  return [...typingFiles, indexFile]\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AAExB,gCAAwC;AAExC,MAAM,+BAA+B,OACnC,kBACA,aAC0B;AAC1B,QAAM,cAAc,IAAI,kDAAwB,gBAAgB;AAChE,cAAY,QAAQ,QAAQ;AAC5B,SAAO,YAAY,QAAQ;AAC7B;AAEA,MAAM,mBAAmB,OAAO,aAA0C;AACxE,MAAI,UAAU;AACd,aAAW,oBAAoB;AAAA;AAC/B,SAAO;AAAA,IACL,MAAM,OAAO;AAAA,IACb;AAAA,EACF;AACF;AAEO,MAAM,4BAA4B,OAAO,qBAA+D;AAC7G,QAAM,WAAW,OAAO,WAAW;AACnC,QAAM,cAAc,MAAM,6BAA6B,kBAAkB,QAAQ;AACjF,QAAM,YAAY,MAAM,iBAAiB,QAAQ;AACjD,SAAO,CAAC,GAAG,aAAa,SAAS;AACnC;",
  "names": []
}
