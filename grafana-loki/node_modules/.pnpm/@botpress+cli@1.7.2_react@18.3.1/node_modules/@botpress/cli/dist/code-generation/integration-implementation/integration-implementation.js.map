{
  "version": 3,
  "sources": ["../../../src/code-generation/integration-implementation/integration-implementation.ts"],
  "sourcesContent": ["import * as sdk from '@botpress/sdk'\nimport * as consts from '../consts'\nimport { Module } from '../module'\nimport { IntegrationTypingsModule } from './integration-typings'\n\nexport class IntegrationImplementationModule extends Module {\n  private _typingsModule: IntegrationTypingsModule\n\n  public constructor(integration: sdk.IntegrationDefinition) {\n    super({\n      path: consts.INDEX_FILE,\n      exportName: 'Integration',\n    })\n    this._typingsModule = new IntegrationTypingsModule(integration)\n    this._typingsModule.unshift('typings')\n    this.pushDep(this._typingsModule)\n  }\n\n  public async getContent() {\n    let content = ''\n\n    const typingsImport = this._typingsModule.import(this)\n\n    content += [\n      consts.GENERATED_HEADER,\n      'import * as sdk from \"@botpress/sdk\"',\n      `import * as ${this._typingsModule.name} from \"./${typingsImport}\"`,\n      `export * from \"./${typingsImport}\"`,\n      '',\n      `type TIntegration = sdk.DefaultIntegration<${this._typingsModule.name}.${this._typingsModule.exportName}>`,\n      '',\n      'export type IntegrationProps = sdk.IntegrationProps<TIntegration>',\n      '',\n      'export class Integration extends sdk.Integration<TIntegration> {}',\n      '',\n      'export type Client = sdk.IntegrationSpecificClient<TIntegration>',\n      '',\n      '// extra types',\n      '',\n      'type Cast<X, Y> = X extends Y ? X : Y',\n      'type ValueOf<T> = T[keyof T]',\n      'type AsyncFunction = (...args: any[]) => Promise<any>',\n      '',\n      \"export type HandlerProps = Parameters<IntegrationProps['handler']>[0]\",\n      '',\n      'export type ActionProps = {',\n      \"  [K in keyof IntegrationProps['actions']]: Parameters<IntegrationProps['actions'][K]>[0]\",\n      '}',\n      'export type AnyActionProps = ValueOf<ActionProps>',\n      '',\n      'export type MessageProps = {',\n      \"  [TChannel in keyof IntegrationProps['channels']]: {\",\n      \"    [TMessage in keyof IntegrationProps['channels'][TChannel]['messages']]: Parameters<\",\n      \"      IntegrationProps['channels'][TChannel]['messages'][TMessage]\",\n      '    >[0]',\n      '  }',\n      '}',\n      'export type AnyMessageProps = ValueOf<ValueOf<MessageProps>>',\n      '',\n      \"export type Context = HandlerProps['ctx']\",\n      \"export type Logger = HandlerProps['logger']\",\n      '',\n      'export type AckFunctions = {',\n      '  [TChannel in keyof MessageProps]: {',\n      \"    [TMessage in keyof MessageProps[TChannel]]: Cast<MessageProps[TChannel][TMessage], AnyMessageProps>['ack']\",\n      '  }',\n      '}',\n      'export type AnyAckFunction = ValueOf<ValueOf<AckFunctions>>',\n      '',\n      'export type ClientOperation = ValueOf<{',\n      '  [K in keyof Client as Client[K] extends AsyncFunction ? K : never]: K',\n      '}>',\n      'export type ClientRequests = {',\n      '  [K in ClientOperation]: Parameters<Client[K]>[0]',\n      '}',\n      'export type ClientResponses = {',\n      '  [K in ClientOperation]: Awaited<ReturnType<Client[K]>>',\n      '}',\n    ].join('\\n')\n\n    return content\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AACxB,oBAAuB;AACvB,iCAAyC;AAElC,MAAM,wCAAwC,qBAAO;AAAA,EAClD;AAAA,EAED,YAAY,aAAwC;AACzD,UAAM;AAAA,MACJ,MAAM,OAAO;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AACD,SAAK,iBAAiB,IAAI,oDAAyB,WAAW;AAC9D,SAAK,eAAe,QAAQ,SAAS;AACrC,SAAK,QAAQ,KAAK,cAAc;AAAA,EAClC;AAAA,EAEA,MAAa,aAAa;AACxB,QAAI,UAAU;AAEd,UAAM,gBAAgB,KAAK,eAAe,OAAO,IAAI;AAErD,eAAW;AAAA,MACT,OAAO;AAAA,MACP;AAAA,MACA,eAAe,KAAK,eAAe,gBAAgB;AAAA,MACnD,oBAAoB;AAAA,MACpB;AAAA,MACA,8CAA8C,KAAK,eAAe,QAAQ,KAAK,eAAe;AAAA,MAC9F;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,EAAE,KAAK,IAAI;AAEX,WAAO;AAAA,EACT;AACF;",
  "names": []
}
