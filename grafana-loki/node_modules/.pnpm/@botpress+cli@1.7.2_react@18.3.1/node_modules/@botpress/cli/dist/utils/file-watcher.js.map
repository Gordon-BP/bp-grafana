{
  "version": 3,
  "sources": ["../../src/utils/file-watcher.ts"],
  "sourcesContent": ["import watcher from '@parcel/watcher'\nimport { EventEmitter } from './event-emitter'\n\nexport type FileChangeHandler = (events: watcher.Event[]) => Promise<void>\n\ntype EmptyObject = Record<never, never>\ntype FileWatcherEvent = {\n  error: unknown\n  close: EmptyObject\n}\n\n/**\n * Wraps the Parcel file watcher to ensure errors can be catched in an async/await fashion\n */\nexport class FileWatcher {\n  public static async watch(dir: string, fn: FileChangeHandler, opt?: watcher.Options) {\n    const eventEmitter = new EventEmitter<FileWatcherEvent>()\n    const subscription = await watcher.subscribe(\n      dir,\n      async (err: Error | null, events: watcher.Event[]) => {\n        if (err) {\n          eventEmitter.emit('error', err)\n          return\n        }\n\n        try {\n          await fn(events)\n        } catch (thrown) {\n          eventEmitter.emit('error', thrown)\n        }\n      },\n      opt\n    )\n    return new FileWatcher(subscription, eventEmitter)\n  }\n\n  private constructor(\n    private _subscription: watcher.AsyncSubscription,\n    private _errorEmitter: EventEmitter<FileWatcherEvent>\n  ) {}\n\n  public async close() {\n    await this._subscription.unsubscribe()\n    this._errorEmitter.emit('close', {})\n  }\n\n  public wait = () =>\n    new Promise((resolve, reject) => {\n      this._errorEmitter.once('error', reject)\n      this._errorEmitter.once('close', resolve)\n    })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB;AACpB,2BAA6B;AAatB,MAAM,YAAY;AAAA,EAsBf,YACE,eACA,eACR;AAFQ;AACA;AAAA,EACP;AAAA,EAxBH,aAAoB,MAAM,KAAa,IAAuB,KAAuB;AACnF,UAAM,eAAe,IAAI,kCAA+B;AACxD,UAAM,eAAe,MAAM,eAAAA,QAAQ;AAAA,MACjC;AAAA,MACA,OAAO,KAAmB,WAA4B;AACpD,YAAI,KAAK;AACP,uBAAa,KAAK,SAAS,GAAG;AAC9B;AAAA,QACF;AAEA,YAAI;AACF,gBAAM,GAAG,MAAM;AAAA,QACjB,SAAS,QAAP;AACA,uBAAa,KAAK,SAAS,MAAM;AAAA,QACnC;AAAA,MACF;AAAA,MACA;AAAA,IACF;AACA,WAAO,IAAI,YAAY,cAAc,YAAY;AAAA,EACnD;AAAA,EAOA,MAAa,QAAQ;AACnB,UAAM,KAAK,cAAc,YAAY;AACrC,SAAK,cAAc,KAAK,SAAS,CAAC,CAAC;AAAA,EACrC;AAAA,EAEO,OAAO,MACZ,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC/B,SAAK,cAAc,KAAK,SAAS,MAAM;AACvC,SAAK,cAAc,KAAK,SAAS,OAAO;AAAA,EAC1C,CAAC;AACL;",
  "names": ["watcher"]
}
