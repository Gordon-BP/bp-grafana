{
  "version": 3,
  "sources": ["../../src/utils/schema-utils.test.ts"],
  "sourcesContent": ["import { it, expect, describe } from 'vitest'\nimport { dereferenceSchema } from './schema-utils'\nimport { JSONSchema7 } from 'json-schema'\n\ndescribe('dereferenceSchema', () => {\n  it('should do nothing if no $ref', async () => {\n    const schema: JSONSchema7 = { type: 'object' }\n    const result = await dereferenceSchema(schema)\n    expect(result).toEqual(schema)\n  })\n\n  it('should dereference local $ref', async () => {\n    const schema: JSONSchema7 = {\n      type: 'object',\n      properties: {\n        foo: { $ref: '#/$defs/foo' },\n        bar: { $ref: '#/definitions/bar' },\n      },\n      $defs: {\n        foo: { type: 'string' },\n      },\n      definitions: {\n        bar: { type: 'number' },\n      },\n    }\n    const result = await dereferenceSchema(schema)\n    expect(result).toEqual({\n      type: 'object',\n      properties: {\n        foo: { type: 'string' },\n        bar: { type: 'number' },\n      },\n      $defs: {\n        foo: { type: 'string' },\n      },\n      definitions: {\n        bar: { type: 'number' },\n      },\n    })\n  })\n\n  it('should ignore non-local $ref', async () => {\n    const schema: JSONSchema7 = {\n      type: 'object',\n      properties: {\n        foo: { $ref: 'TItem' },\n      },\n    }\n    const result = await dereferenceSchema(schema)\n    expect(result).toEqual(schema)\n  })\n})\n"],
  "mappings": ";AAAA,oBAAqC;AACrC,0BAAkC;AAAA,IAGlC,wBAAS,qBAAqB,MAAM;AAClC,wBAAG,gCAAgC,YAAY;AAC7C,UAAM,SAAsB,EAAE,MAAM,SAAS;AAC7C,UAAM,SAAS,UAAM,uCAAkB,MAAM;AAC7C,8BAAO,MAAM,EAAE,QAAQ,MAAM;AAAA,EAC/B,CAAC;AAED,wBAAG,iCAAiC,YAAY;AAC9C,UAAM,SAAsB;AAAA,MAC1B,MAAM;AAAA,MACN,YAAY;AAAA,QACV,KAAK,EAAE,MAAM,cAAc;AAAA,QAC3B,KAAK,EAAE,MAAM,oBAAoB;AAAA,MACnC;AAAA,MACA,OAAO;AAAA,QACL,KAAK,EAAE,MAAM,SAAS;AAAA,MACxB;AAAA,MACA,aAAa;AAAA,QACX,KAAK,EAAE,MAAM,SAAS;AAAA,MACxB;AAAA,IACF;AACA,UAAM,SAAS,UAAM,uCAAkB,MAAM;AAC7C,8BAAO,MAAM,EAAE,QAAQ;AAAA,MACrB,MAAM;AAAA,MACN,YAAY;AAAA,QACV,KAAK,EAAE,MAAM,SAAS;AAAA,QACtB,KAAK,EAAE,MAAM,SAAS;AAAA,MACxB;AAAA,MACA,OAAO;AAAA,QACL,KAAK,EAAE,MAAM,SAAS;AAAA,MACxB;AAAA,MACA,aAAa;AAAA,QACX,KAAK,EAAE,MAAM,SAAS;AAAA,MACxB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAED,wBAAG,gCAAgC,YAAY;AAC7C,UAAM,SAAsB;AAAA,MAC1B,MAAM;AAAA,MACN,YAAY;AAAA,QACV,KAAK,EAAE,MAAM,QAAQ;AAAA,MACvB;AAAA,IACF;AACA,UAAM,SAAS,UAAM,uCAAkB,MAAM;AAC7C,8BAAO,MAAM,EAAE,QAAQ,MAAM;AAAA,EAC/B,CAAC;AACH,CAAC;",
  "names": []
}
