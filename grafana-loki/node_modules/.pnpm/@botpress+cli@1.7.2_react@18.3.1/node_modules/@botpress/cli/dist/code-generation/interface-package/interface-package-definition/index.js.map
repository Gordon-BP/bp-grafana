{
  "version": 3,
  "sources": ["../../../../src/code-generation/interface-package/interface-package-definition/index.ts"],
  "sourcesContent": ["import * as consts from '../../consts'\nimport { Module } from '../../module'\nimport { ActionsModule } from './actions-module'\nimport { ChannelsModule } from './channels-module'\nimport { EntitiesModule } from './entities-module'\nimport { EventsModule } from './events-module'\nimport * as types from './typings'\n\ntype InterfacePackageModuleDependencies = {\n  actionsModule: ActionsModule\n  channelsModule: ChannelsModule\n  eventsModule: EventsModule\n  entitiesModule: EntitiesModule\n}\n\nexport class InterfacePackageDefinitionModule extends Module {\n  private _dependencies: InterfacePackageModuleDependencies\n\n  public constructor(private _interface: types.ApiInterfaceDefinition) {\n    super({\n      path: consts.INDEX_FILE,\n      exportName: consts.DEFAULT_EXPORT_NAME,\n    })\n\n    const actionsModule = new ActionsModule(_interface.actions ?? {})\n    actionsModule.unshift('actions')\n\n    const channelsModule = new ChannelsModule(_interface.channels ?? {})\n    channelsModule.unshift('channels')\n\n    const eventsModule = new EventsModule(_interface.events ?? {})\n    eventsModule.unshift('events')\n\n    const entitiesModule = new EntitiesModule(_interface.entities ?? {})\n    entitiesModule.unshift('entities')\n\n    this._dependencies = {\n      actionsModule,\n      channelsModule,\n      eventsModule,\n      entitiesModule,\n    }\n\n    for (const dep of Object.values(this._dependencies)) {\n      this.pushDep(dep)\n    }\n  }\n\n  public async getContent() {\n    let content = ''\n\n    const { actionsModule, channelsModule, eventsModule, entitiesModule } = this._dependencies\n\n    const actionsImport = actionsModule.import(this)\n    const channelsImport = channelsModule.import(this)\n    const eventsImport = eventsModule.import(this)\n    const entitiesImport = entitiesModule.import(this)\n\n    const templateName =\n      this._interface.nameTemplate === undefined ? 'undefined' : `\"${this._interface.nameTemplate.script}\"`\n\n    content += [\n      consts.GENERATED_HEADER,\n      'import * as sdk from \"@botpress/sdk\"',\n      '',\n      `import * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `import * as ${channelsModule.name} from \"./${channelsImport}\"`,\n      `import * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `import * as ${entitiesModule.name} from \"./${entitiesImport}\"`,\n      `export * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `export * as ${channelsModule.name} from \"./${channelsImport}\"`,\n      `export * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `export * as ${entitiesModule.name} from \"./${entitiesImport}\"`,\n      '',\n      'export default {',\n      `  name: \"${this._interface.name}\",`,\n      `  version: \"${this._interface.version}\",`,\n      `  actions: ${actionsModule.name}.${actionsModule.exportName},`,\n      `  channels: ${channelsModule.name}.${channelsModule.exportName},`,\n      `  events: ${eventsModule.name}.${eventsModule.exportName},`,\n      `  entities: ${entitiesModule.name}.${entitiesModule.exportName},`,\n      `  templateName: ${templateName},`,\n      '} satisfies sdk.InterfacePackage[\"definition\"]',\n    ].join('\\n')\n\n    return content\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwB;AACxB,oBAAuB;AACvB,4BAA8B;AAC9B,6BAA+B;AAC/B,6BAA+B;AAC/B,2BAA6B;AAUtB,MAAM,yCAAyC,qBAAO;AAAA,EAGpD,YAAoB,YAA0C;AACnE,UAAM;AAAA,MACJ,MAAM,OAAO;AAAA,MACb,YAAY,OAAO;AAAA,IACrB,CAAC;AAJwB;AAMzB,UAAM,gBAAgB,IAAI,oCAAc,WAAW,WAAW,CAAC,CAAC;AAChE,kBAAc,QAAQ,SAAS;AAE/B,UAAM,iBAAiB,IAAI,sCAAe,WAAW,YAAY,CAAC,CAAC;AACnE,mBAAe,QAAQ,UAAU;AAEjC,UAAM,eAAe,IAAI,kCAAa,WAAW,UAAU,CAAC,CAAC;AAC7D,iBAAa,QAAQ,QAAQ;AAE7B,UAAM,iBAAiB,IAAI,sCAAe,WAAW,YAAY,CAAC,CAAC;AACnE,mBAAe,QAAQ,UAAU;AAEjC,SAAK,gBAAgB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,eAAW,OAAO,OAAO,OAAO,KAAK,aAAa,GAAG;AACnD,WAAK,QAAQ,GAAG;AAAA,IAClB;AAAA,EACF;AAAA,EA9BQ;AAAA,EAgCR,MAAa,aAAa;AACxB,QAAI,UAAU;AAEd,UAAM,EAAE,eAAe,gBAAgB,cAAc,eAAe,IAAI,KAAK;AAE7E,UAAM,gBAAgB,cAAc,OAAO,IAAI;AAC/C,UAAM,iBAAiB,eAAe,OAAO,IAAI;AACjD,UAAM,eAAe,aAAa,OAAO,IAAI;AAC7C,UAAM,iBAAiB,eAAe,OAAO,IAAI;AAEjD,UAAM,eACJ,KAAK,WAAW,iBAAiB,SAAY,cAAc,IAAI,KAAK,WAAW,aAAa;AAE9F,eAAW;AAAA,MACT,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA,eAAe,cAAc,gBAAgB;AAAA,MAC7C,eAAe,eAAe,gBAAgB;AAAA,MAC9C,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,eAAe,gBAAgB;AAAA,MAC9C,eAAe,cAAc,gBAAgB;AAAA,MAC7C,eAAe,eAAe,gBAAgB;AAAA,MAC9C,eAAe,aAAa,gBAAgB;AAAA,MAC5C,eAAe,eAAe,gBAAgB;AAAA,MAC9C;AAAA,MACA;AAAA,MACA,YAAY,KAAK,WAAW;AAAA,MAC5B,eAAe,KAAK,WAAW;AAAA,MAC/B,cAAc,cAAc,QAAQ,cAAc;AAAA,MAClD,eAAe,eAAe,QAAQ,eAAe;AAAA,MACrD,aAAa,aAAa,QAAQ,aAAa;AAAA,MAC/C,eAAe,eAAe,QAAQ,eAAe;AAAA,MACrD,mBAAmB;AAAA,MACnB;AAAA,IACF,EAAE,KAAK,IAAI;AAEX,WAAO;AAAA,EACT;AACF;",
  "names": []
}
