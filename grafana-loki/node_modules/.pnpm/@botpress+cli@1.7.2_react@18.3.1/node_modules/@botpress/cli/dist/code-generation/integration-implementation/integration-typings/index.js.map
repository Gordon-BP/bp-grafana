{
  "version": 3,
  "sources": ["../../../../src/code-generation/integration-implementation/integration-typings/index.ts"],
  "sourcesContent": ["import * as sdk from '@botpress/sdk'\nimport { GENERATED_HEADER, INDEX_FILE } from '../../consts'\nimport { stringifySingleLine } from '../../generators'\nimport { Module } from '../../module'\nimport { ActionsModule } from './actions-module'\nimport { ChannelsModule } from './channels-module'\nimport { DefaultConfigurationModule } from './configuration-module'\nimport { ConfigurationsModule } from './configurations-module'\nimport { EntitiesModule } from './entities-module'\nimport { EventsModule } from './events-module'\nimport { StatesModule } from './states-module'\n\ntype IntegrationTypingsModuleDependencies = {\n  defaultConfigModule: DefaultConfigurationModule\n  configurationsModule: ConfigurationsModule\n  actionsModule: ActionsModule\n  channelsModule: ChannelsModule\n  eventsModule: EventsModule\n  statesModule: StatesModule\n  entitiesModule: EntitiesModule\n}\n\nexport class IntegrationTypingsModule extends Module {\n  private _dependencies: IntegrationTypingsModuleDependencies\n\n  public constructor(private _integration: sdk.IntegrationPackage['definition']) {\n    super({\n      path: INDEX_FILE,\n      exportName: 'TIntegration',\n    })\n\n    const defaultConfigModule = new DefaultConfigurationModule(_integration.configuration)\n    defaultConfigModule.unshift('configuration')\n\n    const configurationsModule = new ConfigurationsModule(_integration.configurations ?? {})\n    configurationsModule.unshift('configurations')\n\n    const actionsModule = new ActionsModule(_integration.actions ?? {})\n    actionsModule.unshift('actions')\n\n    const channelsModule = new ChannelsModule(_integration.channels ?? {})\n    channelsModule.unshift('channels')\n\n    const eventsModule = new EventsModule(_integration.events ?? {})\n    eventsModule.unshift('events')\n\n    const statesModule = new StatesModule(_integration.states ?? {})\n    statesModule.unshift('states')\n\n    const entitiesModule = new EntitiesModule(_integration.entities ?? {})\n    entitiesModule.unshift('entities')\n\n    this._dependencies = {\n      defaultConfigModule,\n      configurationsModule,\n      actionsModule,\n      channelsModule,\n      eventsModule,\n      statesModule,\n      entitiesModule,\n    }\n\n    for (const dep of Object.values(this._dependencies)) {\n      this.pushDep(dep)\n    }\n  }\n\n  public async getContent() {\n    let content = ''\n\n    const {\n      defaultConfigModule,\n      configurationsModule,\n      actionsModule,\n      channelsModule,\n      eventsModule,\n      statesModule,\n      entitiesModule,\n    } = this._dependencies\n\n    const defaultConfigImport = defaultConfigModule.import(this)\n    const configurationsImport = configurationsModule.import(this)\n    const actionsImport = actionsModule.import(this)\n    const channelsImport = channelsModule.import(this)\n    const eventsImport = eventsModule.import(this)\n    const statesImport = statesModule.import(this)\n    const entitiesImport = entitiesModule.import(this)\n\n    const user = {\n      tags: this._integration.user?.tags ?? {},\n      creation: this._integration.user?.creation ?? { enabled: false, requiredTags: [] },\n    }\n\n    content += [\n      GENERATED_HEADER,\n      `import * as ${defaultConfigModule.name} from \"./${defaultConfigImport}\"`,\n      `import * as ${configurationsModule.name} from \"./${configurationsImport}\"`,\n      `import * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `import * as ${channelsModule.name} from \"./${channelsImport}\"`,\n      `import * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `import * as ${statesModule.name} from \"./${statesImport}\"`,\n      `import * as ${entitiesModule.name} from \"./${entitiesImport}\"`,\n      `export * as ${defaultConfigModule.name} from \"./${defaultConfigImport}\"`,\n      `export * as ${configurationsModule.name} from \"./${configurationsImport}\"`,\n      `export * as ${actionsModule.name} from \"./${actionsImport}\"`,\n      `export * as ${channelsModule.name} from \"./${channelsImport}\"`,\n      `export * as ${eventsModule.name} from \"./${eventsImport}\"`,\n      `export * as ${statesModule.name} from \"./${statesImport}\"`,\n      `export * as ${entitiesModule.name} from \"./${entitiesImport}\"`,\n      '',\n      'export type TIntegration = {',\n      `  name: \"${this._integration.name}\"`,\n      `  version: \"${this._integration.version}\"`,\n      `  user: ${stringifySingleLine(user)}`,\n      `  configuration: ${defaultConfigModule.name}.${defaultConfigModule.exportName}`,\n      `  configurations: ${configurationsModule.name}.${configurationsModule.exportName}`,\n      `  actions: ${actionsModule.name}.${actionsModule.exportName}`,\n      `  channels: ${channelsModule.name}.${channelsModule.exportName}`,\n      `  events: ${eventsModule.name}.${eventsModule.exportName}`,\n      `  states: ${statesModule.name}.${statesModule.exportName}`,\n      `  entities: ${entitiesModule.name}.${entitiesModule.exportName}`,\n      '}',\n    ].join('\\n')\n\n    return content\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
